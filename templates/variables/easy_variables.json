{
    "components":{
        "schemas":{
            "easy_aci":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "apic_versions":{
                                "description": "APIC Releases.  Select the Version that Most Closely matches your version.",
                                "type": "list_of_values",
                                "enum": [
                                    "5.2(4e)",
                                    "5.2(4d)",
                                    "5.2(3g)",
                                    "5.1(4c)",
                                    "5.0(2h)",
                                    "4.2(7t)"
                                ],
                                "default": "5.2(4d)",
                                "x-omitempty": true
                            },
                            "classes":{
                                "enum": [
                                    "access",
                                    "admin",
                                    "fabric",
                                    "switches",
                                    "system_settings"
                                ]
                            },
                            "class.access":{
                                "enum": [
                                    "aaep_policies",
                                    "cdp_interface_policies",
                                    "fibre_channel_interface_policies",
                                    "l2_interface_policies",
                                    "layer3_domains",
                                    "leaf_policy_groups",
                                    "leaf_port_group_access",
                                    "leaf_port_group_breakout",
                                    "leaf_port_group_bundle",
                                    "link_level_policies",
                                    "lldp_interface_policies",
                                    "mcp_interface_policies",
                                    "physical_domains",
                                    "port_channel_policies",
                                    "port_security_policies",
                                    "spanning_tree_interface_policies",
                                    "spine_policy_groups",
                                    "spine_port_group_access",
                                    "virtual_networking",
                                    "vlan_pools"
                                ]
                            },
                            "class.admin":{
                                "enum": [
                                    "authentication",
                                    "configuration_backups",
                                    "firmware",
                                    "security",
                                    "radius",
                                    "tacacs"
                                ]
                            },
                            "class.fabric":{
                                "enum": [
                                    "date_and_time",
                                    "dns_profiles",
                                    "smart_callhome",
                                    "snmp_policies",
                                    "syslog"
                                ]
                            },
                            "class.switches":{
                                "enum": [
                                    "switch_profiles",
                                    "vpc_domains"
                                ]
                            },
                            "class.system_settings":{
                                "enum": [
                                    "apic_connectivity_preference",
                                    "bgp_asn",
                                    "bgp_rr",
                                    "global_aes_encryption_settings"
                                ]
                            },
                            "class.tenant_holder":{
                                "enum": [
                                    "application_epgs",
                                    "application_profiles",
                                    "bfd_interface_policies",
                                    "bgp_policies",
                                    "bgp_route_control",
                                    "bridge_domains",
                                    "contracts",
                                    "dhcp_option_policies",
                                    "dhcp_relay_policies",
                                    "endpoint_retention_policies",
                                    "l3outs",
                                    "l3out_bgp_neighbors",
                                    "l3out_floating_svi",
                                    "l3out_hsrp",
                                    "lsout_static_route",
                                    "ospf_policies",
                                    "route_map_match_rules",
                                    "route_maps_for_route_control",
                                    "schemas",
                                    "sites"
                                ]
                            },
                            "class.tenants":{
                                "enum": [
                                    "tenants",
                                    "vrfs"
                                ]
                            },
                            "processes_temp":{
                                "enum": [
                                    "access",
                                    "admin",
                                    "fabric",
                                    "switches",
                                    "system_settings",
                                    "tenants",
                                    "virtual_networking"
                                ]
                            },
                            "processes":{
                                "enum": [
                                    "tenants"
                                ]
                            },
                            "easyDict":{
                                "access":{
                                    "aaep_policies":{},
                                    "cdp_interface_policies":{},
                                    "fibre_channel_interface_policies":{},
                                    "firmware":{},
                                    "interface_policies":{},
                                    "l2_interface_policies":{},
                                    "layer3_domains":{},
                                    "link_level_policies":{},
                                    "leaf_policy_groups":{},
                                    "leaf_port_group_access":{},
                                    "leaf_port_group_breakout":{},
                                    "leaf_port_group_bundle":{},
                                    "lldp_interface_policies":{},
                                    "mcp_interface_policies":{},
                                    "physical_domains":{},
                                    "port_channel_policies":{},
                                    "port_security_policies":{},
                                    "spanning_tree_interface_policies":{},
                                    "spine_modules":{},
                                    "spine_policy_groups":{},
                                    "spine_port_group_access":{},
                                    "virtual_networking":{},
                                    "vlan_pools":{}
                                },
                                "admin":{
                                    "authentication":{},
                                    "configuration_backups":{},
                                    "firmware":{},
                                    "security":{},
                                    "radius":{},
                                    "tacacs":{}
                                },
                                "fabric":{
                                    "date_and_time":{},
                                    "dns_profiles":{},
                                    "smart_callhome":{},
                                    "snmp_policies":{},
                                    "syslog":{}
                                },
                                "inventory":{},
                                "latest_versions":{
                                    "aci_provider_version":"",
                                    "ndo_provider_version":"",
                                    "ndo_versions":{
                                        "description": "List of NDO Versions obtained from dcappcenter.",
                                        "type": "list_of_values",
                                        "enum":[],
                                        "default":""
                                    },
                                    "terraform_version":""
                                },
                                "sites":{},
                                "switches":{
                                    "switch_profiles":{},
                                    "vpc_domains":{}
                                },
                                "system_settings":{
                                    "apic_connectivity_preference":{},
                                    "bgp_asn":{},
                                    "bgp_rr":{},
                                    "global_aes_encryption_settings":{}
                                },
                                "tenants":{
                                    "apics_inband":{},
                                    "application_epg_policies":{},
                                    "application_epgs":{},
                                    "application_epg_vmm_policies":{},
                                    "application_profiles":{},
                                    "bfd_interface_policies":{},
                                    "bgp_peer_prefix_policies":{},
                                    "bridge_domains":{},
                                    "bridge_domains_general":{},
                                    "bridge_domains_l3":{},
                                    "contracts":{},
                                    "dhcp_option_policies":{},
                                    "dhcp_relay_policies":{},
                                    "eigrp_interface_policies":{},
                                    "endpoint_retention_policies":{},
                                    "filters":{},
                                    "hsrp_policies":{},
                                    "l3out_floating_svi":{},
                                    "l3out_hsrp":{},
                                    "l3out_static_route":{},
                                    "l3outs":{},
                                    "ospf_interface_policies":{},
                                    "ospf_policies":{},
                                    "route_map_match_rules":{},
                                    "route_map_set_rules":{},
                                    "route_maps_for_route_control":{},
                                    "schemas":{},
                                    "sites":{},
                                    "tenants":{},
                                    "vrf_policies":{},
                                    "vrfs":{}
                                }
                            },
                            "files":{
                                "description": "Files to Pull down from the Easy ACI Project.",
                                "access": [
                                    "README.md",
                                    "data_sources.tf",
                                    "domains.tf",
                                    "global_policies.tf",
                                    "interface_policies.tf",
                                    "leaf_interface_policy_groups.tf",
                                    "leaf_policy_groups.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "pools.tf",
                                    "provider.tf",
                                    "spine_interface_policy_groups.tf",
                                    "spine_policy_groups.tf",
                                    "variables.tf",
                                    "virtual_networking.tf"
                                ],
                                "admin": [
                                    "README.md",
                                    "authentication.tf",
                                    "configuration_backups.tf",
                                    "data_sources.tf",
                                    "firmware.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "provider.tf",
                                    "radius.tf",
                                    "security.tf",
                                    "tacacs.tf",
                                    "variables.tf"
                                ],
                                "fabric": [
                                    "README.md",
                                    "date_and_time.tf",
                                    "dns_profiles.tf",
                                    "fabric_node_controls.tf",
                                    "l3_interface.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "pod_profiles.tf",
                                    "provider.tf",
                                    "smart_callhome.tf",
                                    "snmp_policies.tf",
                                    "syslog.tf",
                                    "variables.tf"
                                ],
                                "switch": [
                                    "README.md",
                                    "locals.tf",
                                    "outputs.tf",
                                    "provider.tf",
                                    "switch_profiles.tf",
                                    "variables.tf",
                                    "vpc_domains.tf"
                                ],
                                "system_settings": [
                                    "README.md",
                                    "apic_connectivity_preference.tf",
                                    "bgp.tf",
                                    "coop_group.tf",
                                    "data_sources.tf",
                                    "endpoint_controls.tf",
                                    "fabric_wide_settings.tf",
                                    "global_aes_encryption_settings.tf",
                                    "isis_policy.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "port_tracking.tf",
                                    "provider.tf",
                                    "variables.tf"
                                ],
                                "tenant": [
                                    "README.md",
                                    "application_epgs.tf",
                                    "application_profiles.tf",
                                    "bfd_interface_policies.tf",
                                    "bgp_policies.tf",
                                    "bridge_domains.tf",
                                    "contracts.tf",
                                    "data_sources.tf",
                                    "endpoint_retention_policies.tf",
                                    "filters.tf",
                                    "l3outs.tf",
                                    "locals.tf",
                                    "ospf_policies.tf",
                                    "outputs.tf",
                                    "provider.tf",
                                    "route_map_match_rules.tf",
                                    "route_map_set_rules.tf",
                                    "route_maps_for_route_control.tf",
                                    "schemas.tf",
                                    "tenants.tf",
                                    "variables.tf",
                                    "vrfs.tf"
                                ]
                            },
                            "remove_files": [
                                "coop_group.tf",
                                "data_sources.tf",
                                "endpoint_controls.tf",
                                "fabric_node_controls.tf",
                                "fabric_wide_settings.tf",
                                "isis_policy.tf",
                                "l3_interface.tf",
                                "locals.tf",
                                "main.tf",
                                "output.tf",
                                "outputs.tf",
                                "pod_profiles.tf",
                                "port_tracking.tf",
                                "provider.tf",
                                "README.md",
                                "variables.tf"
                            ],
                            "version":"0.9.5"
                        }
                    }
                ]
            },
            "access.domains.Physical":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                            },
                            "required_args": {
                                "name": "",
                                "site_group": "",
                                "vlan_pool": ""
                            },
                            "vlan_pool":{
                                "description": "Name of the VLAN Pool to Associate to the Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.domains.Layer3":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                            },
                            "required_args": {
                                "name": "",
                                "site_group": "",
                                "vlan_pool": ""
                            },
                            "vlan_pool":{
                                "description": "Name of the VLAN Pool to Associate to the Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.global.attachableAccessEntityProfile":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "infra_vlan":{
                                "description": "Flag to Include the Infrastructure VLAN.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "l3_domains":{
                                "description": "Names of a Layer3 Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "l3_domains": "",
                                "physical_domains": "",
                                "vmm_domains": ""
                            },
                            "physical_domains":{
                                "description": "Names of a Physical Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "infra_vlan": "",
                                "name": "",
                                "site_group": ""
                            },
                            "vmm_domains":{
                                "description": "Name(s) of Virtual Networking Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.cdpInterface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args": {
                                "admin_state": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policies.fibreChannelInterface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "auto_max_speed":{
                                "description": "Auto-max-speed for object interface FC policy.",
                                "type": "list_of_values",
                                "enum": [
                                    "4G",
                                    "8G",
                                    "16G",
                                    "32G"
                                ],
                                "default": "32G",
                                "x-omitempty": true
                            },
                            "fill_pattern":{
                                "description": "Fill Pattern for native FC ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "ARBFF",
                                    "IDLE"
                                ],
                                "default": "ARBFF",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "port_mode":{
                                "description": "In which mode Ports should be used.",
                                "type": "list_of_values",
                                "enum": [
                                    "f",
                                    "np"
                                ],
                                "default": "f",
                                "x-omitempty": true
                            },
                            "receive_buffer_credit":{
                                "description": "Receive buffer credits for native FC ports.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 16,
                                "maximum": 64,
                                "default": 64,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "auto_max_speed": "",
                                "fill_pattern": "",
                                "name": "",
                                "port_mode": "",
                                "receive_buffer_credit": "",
                                "speed": "",
                                "trunk_mode": ""
                            },
                            "speed":{
                                "description": "CPU or port speed.",
                                "type": "list_of_values",
                                "enum": [
                                    "4G",
                                    "8G",
                                    "16G",
                                    "32G",
                                    "auto"
                                ],
                                "default": "auto",
                                "x-omitempty": true
                            },
                            "trunk_mode":{
                                "description": "Trunking on/off for native FC ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "un-init",
                                    "trunk-off",
                                    "trunk-on",
                                    "auto"
                                ],
                                "default": "trunk-off",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.L2Interface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "description": ""
                            },
                            "QinQ":{
                                "description": "To enable or disable an interface for Dot1q Tunnel or Q-in-Q encapsulation modes",
                                "type": "list_of_values",
                                "enum": [
                                    "corePort",
                                    "disabled",
                                    "doubleQtagPort",
                                    "edgePort"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "reflective_relay":{
                                "description": "Enable or disable reflective relay for ports that consume the policy.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "QinQ": "",
                                "reflective_relay": "",
                                "site_group": "",
                                "vlan_scope": ""
                            },
                            "vlan_scope":{
                                "description": "The layer 2 interface VLAN scope.",
                                "type": "list_of_values",
                                "enum": [
                                    "global",
                                    "portlocal"
                                ],
                                "default": "global",
                                "x-omitempty": true
                            }

                        }
                    }
                ]
            },
            "access.policies.linkLevel":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "auto_negotiation":{
                                "description": "Policy auto negotiation for object fabric if pol.",
                                "type": "list_of_values",
                                "enum": [
                                    "off",
                                    "on",
                                    "on-enforce"
                                ],
                                "default": "on",
                                "x-omitempty": true
                            },
                            "emi_retrain":{
                                "description": "The electromagnetic interference (EMI) retrain feature filters any noise on a link due to electromagnetic interference, and retrains the link to avoid a link flap. Enable EMI retrain if your data center environment has a lot of EMI noise.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "forwarding_error_correction":{
                                "description": "Forwarding Error Correction (FEC) is a method of obtaining error control in data transmission over an unreliable or noisy channel in which the source (transmitter) encodes the data in a redundant way using Error Correcting Code and the destination (receiver) recognizes it and corrects the errors without needing a retransmission.",
                                "type": "list_of_values",
                                "enum": [
                                    "inherit",
                                    "auto-fec",
                                    "cl74-fc-fec",
                                    "cl91-rs-fec",
                                    "cons16-rs-fec",
                                    "disable-fec",
                                    "ieee-rs-fec",
                                    "kp-fec"
                                ],
                                "default": "f",
                                "x-omitempty": true
                            },
                            "link_debounce_interval":{
                                "description": "The interface policy administrative port link debounce interval. Enables the debounce timer for physical interface ports and sets it for a specified amount of time in milliseconds. The debounce timer is disabled if you specify a value of 0.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 5000,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "physical_media_type":{
                                "description": "The trasnceiver type.",
                                "type": "list_of_values",
                                "enum": [
                                    "auto",
                                    "sfp_10g_tx"
                                ],
                                "default": "auto",
                                "x-omitempty": true
                            },
                            "port_delay_when_coming_up":{
                                "description": "The time in milliseconds that the DFE tuning is delayed when a port is coming up. The delay is used to help avoid CRC errors during link bringup. You should set the delay only as required; in most cases, you do not need to set a delay.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 10000,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "auto_negotiation": "",
                                "emi_retrain": "",
                                "forwarding_error_correction": "",
                                "link_debounce_interval": "",
                                "name": "",
                                "physical_media_type": "",
                                "port_delay_when_coming_up": "",
                                "site_group": "",
                                "speed": ""
                            },
                            "speed":{
                                "description": "The interface policy administrative port speed. The data transfer rate for the port should match the destination to which the port is linked. The administrative speed can be changed only for certain ports, and not all speeds are available on all systems. For more information, see the Hardware Installation Guide for your fabric interconnect.",
                                "type": "list_of_values",
                                "enum": [
                                    "inherit",
                                    "100M",
                                    "1G",
                                    "10G",
                                    "25G",
                                    "40G",
                                    "50G",
                                    "100G",
                                    "200G",
                                    "400G"
                                ],
                                "default": "inherit",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.lldpInterface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "receive_state":{
                                "description": "The reception of LLDP packets on an interface.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "receive_state": "",
                                "site_group": "",
                                "transmit_state": ""
                            },
                            "transmit_state":{
                                "description": "The transmission of LLDP packets on an interface.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.mcpInterface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "admin_state": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policies.PortChannel":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "fast_select_hot_standby_ports":{
                                "description": "Configures fast select for hot standby ports. Enabling this feature will allow fast selection of a hot standby port when last active port in the port-channel is going down.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "graceful_convergence":{
                                "description": "Configures port-channel LACP graceful convergence. Disable this only with LACP ports connected to a Non-Nexus peer. Disabling this with Nexus peer can lead to port suspension.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "load_defer_member_ports":{
                                "description": "Configures the load-balancing algorithm for port channels that applies to the entire device or to only one module.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "mode":{
                                "description": "Port-channel policy mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "active",
                                    "mac-pin",
                                    "mac-pin-nicload",
                                    "off",
                                    "passive"
                                ],
                                "default": "active",
                                "x-omitempty": true
                            },
                            "maximum_number_of_links":{
                                "description": "Maximum number of links.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 16,
                                "default": 16,
                                "x-omitempty": true
                            },
                            "minimum_number_of_links":{
                                "description": "Minimum number of links in port channel.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 16,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args": {
                                "fast_select_hot_standby_ports": "",
                                "graceful_convergence": "",
                                "load_defer_member_ports": "",
                                "maximum_number_of_links": "",
                                "minimum_number_of_links": "",
                                "mode": "",
                                "name": "",
                                "site_group": "",
                                "suspend_individual_port": "",
                                "symmetric_hashing": ""
                            },
                            "suspend_individual_port":{
                                "description": "LACP sets a port to the suspended state if it does not receive an LACP bridge protocol data unit (BPDU) from the peer ports in a port channel. This can cause some servers to fail to boot up as they require LACP to logically bring up the port.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "symmetric_hashing":{
                                "description": "Bidirectional traffic is forced to use the same physical interface and each physical interface in the port channel is effectively mapped to a set of flows.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.portSecurity":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "description": ""
                            },
                            "maximum_endpoints":{
                                "description": "The maximum number of endpoints that can be learned on the interface.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 12000,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "port_security_timeout":{
                                "description": "The delay time before MAC learning is re-enabled.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 60,
                                "maximum": 3600,
                                "default": 60,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "maximum_endpoints": "",
                                "port_security_timeout": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policies.spanningTreeInterface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "filter":{
                                "description": "The interface level control that enables the BPDU filter for extended chassis ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "guard":{
                                "description": "The interface level control that enables the BPDU guard for extended chassis ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "filter": "",
                                "guard": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.interfacePolicies":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "copp_interface_policy":{
                                "description": "Name of the Control Plane Policing Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_egress":{
                                "description": "Name of the egress Data Plane Policing Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_ingress":{
                                "description": "Name of the ingress Data Plane Policing Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_interface_policy":{
                                "description": "Name of the Fibre Channel Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "interface_policy":{
                                "description": "Name for this Shared Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l2_interface_policy":{
                                "description": "Name of the L2 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_flap_policy":{
                                "description": "Name of the Link Flap Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_flow_control_policy":{
                                "description": "Name of the Link Level Flow Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_policy":{
                                "description": "Name of the Link Level Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "macsec_policy":{
                                "description": "Name of the MacSec Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mcp_interface_policy":{
                                "description": "Name of the Mis-Cabling Protocol Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "monitoring_policy":{
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "cdp_interface_policy": "",
                                "copp_interface_policy": "",
                                "data_plane_policing_egress": "",
                                "data_plane_policing_ingress": "",
                                "fibre_channel_interface_policy": "",
                                "l2_interface_policy": "",
                                "link_flap_policy": "",
                                "link_level_flow_control_policy": "",
                                "link_level_policy": "",
                                "lldp_interface_policy": "",
                                "macsec_policy": "",
                                "mcp_interface_policy": "",
                                "monitoring_policy": "",
                                "port_security_policy": "",
                                "priority_flow_control_policy": "",
                                "slow_drain_policy": "",
                                "spanning_tree_interface_policy": "",
                                "storm_control_policy": ""
                            },
                            "port_security_policy":{
                                "description": "Name of the Port Security Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "priority_flow_control_policy":{
                                "description": "Name of the Priority Flow Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "interface_policy": ""
                            },
                            "slow_drain_policy":{
                                "description": "Name of the Slow Drain Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "spanning_tree_interface_policy":{
                                "description": "Name of the Spanning Tree Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "storm_control_policy":{
                                "description": "Name of the Storm Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafAccessPort":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "attachable_entity_profile":{
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dot1x_port_authentication_policy":{
                                "description": "Name of the 802.1x Port Authentication Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dwdm_policy":{
                                "description": "Name of the DWDM Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "interface_policy":{
                                "description": "Name of the Shared Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_monitor_policies":{
                                "description": "Names of the Netflow Monitor Policies, appended with the type.  i.e ce, ipv4, ipv6.  In example default:ipv4,default:ipv6.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "dot1x_port_authentication_policy": "",
                                "dwdm_policy": "",
                                "global_alias": "",
                                "netflow_monitor_policies": "",
                                "poe_interface_policy": "",
                                "synce_interface_policy": ""
                            },
                            "poe_interface_policy":{
                                "description": "Name of the PoE Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "attachable_entity_profile": "",
                                "interface_policy": "",
                                "name": "",
                                "site_group": ""
                            },
                            "synce_interface_policy":{
                                "description": "Name of the Synce Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafBundle":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "attachable_entity_profile":{
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_aggregation_policy":{
                                "description": "Name of the Port-Channel Interface Policy (LACP).",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_aggregation_type":{
                                "description": "Defines if the Port-Channel is local to a switch (pc) or redundant accross a pair (vpc)",
                                "type": "list_of_values",
                                "enum": [
                                    "pc",
                                    "vpc"
                                ],
                                "default": "link",
                                "x-omitempty": true
                            },
                            "interface_policy":{
                                "description": "Name of the Shared Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_monitor_policies":{
                                "description": "Names of the Netflow Monitor Policies, appended with the type.  i.e ce, ipv4, ipv6.  In example default:ipv4,default:ipv6.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "netflow_monitor_policies": ""
                            },
                            "poe_interface":{
                                "description": "Name of the PoE Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "attachable_entity_profile": "",
                                "interface_policy": "",
                                "link_aggregation_policy": "",
                                "link_aggregation_type": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafBreakOut":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "breakout_map":{
                                "description": "Enable the port as a breakout port.",
                                "type": "list_of_values",
                                "enum": [
                                    "100g-2x",
                                    "100g-4x",
                                    "10g-4x",
                                    "25g-4x",
                                    "50g-8x"
                                ],
                                "default": "25g-4x",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "breakout_map": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.spineAccessPort":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "attachable_entity_profile":{
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_policy":{
                                "description": "Name of the Link Level Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_flap_policy":{
                                "description": "Name of the Link Flap Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "macsec_policy":{
                                "description": "Name of the MacSec Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "cdp_interface_policy": "",
                                "description": "",
                                "link_level_policy": "",
                                "link_flap_policy": "",
                                "macsec_policy": ""
                            },
                            "required_args": {
                                "attachable_entity_profile": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.pools.Vlan":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "allocation_mode":{
                                "description": "VLAN Allocation Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "static"
                                ],
                                "default": "static",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "global_alias": "",
                                "vlan_group1_allocation": "",
                                "vlan_group2": "",
                                "vlan_group2_allocation": ""
                            },
                            "required_args": {
                                "name": "",
                                "allocation_mode": "",
                                "site_group": "",
                                "vlan_group1": ""
                            },
                            "vlan_group1":{
                                "description": "1st List of VLANs to Add to the VLAN Pool.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            },
                            "vlan_group1_allocation":{
                                "description": "VLAN Allocation Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "inherit",
                                    "static"
                                ],
                                "default": "inherit",
                                "x-omitempty": true
                            },
                            "vlan_group2":{
                                "description": "2nd List of VLANs to Add to the VLAN Pool.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            },
                            "vlan_group2_allocation":{
                                "description": "VLAN Allocation Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "inherit",
                                    "static"
                                ],
                                "default": "inherit",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.profiles.interfaceSelectors":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "access_or_native_vlan":{
                                "description": "Access or Native VLAN Identifier.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4095,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "interface_profile":{
                                "description": "Name of the Interface Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "interface_selector":{
                                "description": "Name of the Interface Selector.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "access_or_native_vlan": "",
                                "description": "",
                                "policy_group": "",
                                "policy_group_type": "",
                                "switchport_mode": "",
                                "trunk_port_allowed_vlans": ""
                            },
                            "policy_group":{
                                "description": "Name of the Policy Group.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "policy_group_type":{
                                "description": "The type of Policy Group.",
                                "type": "list_of_values",
                                "enum": [
                                    "access",
                                    "breakout",
                                    "bundle"
                                ],
                                "default": "bundle",
                                "x-omitempty": true
                            },
                            "port":{
                                "description": "Switchport.",
                                "type": "string",
                                "minimum": 3,
                                "maximum": 5,
                                "pattern":"^[\\d]/[\\d]+$",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "interface_profile": "",
                                "interface_selector": "",
                                "node_id": "",
                                "pod_id": "",
                                "port": "",
                                "site_group": ""
                            },
                            "switchport_mode":{
                                "description": "Switchport Trunk Modes.",
                                "type": "list_of_values",
                                "enum": [
                                    "aaep_encap",
                                    "access",
                                    "trunk"
                                ],
                                "default": "trunk",
                                "x-omitempty": true
                            },
                            "trunk_port_allowed_vlans":{
                                "description": "List of allowed VLANs.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.profiles.switchModules":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "modules":{
                                "description": "Types of Modules.",
                                "type": "list_of_values",
                                "enum": [
                                    "EMPTY",
                                    "X9716D-GX",
                                    "X9732C-EX",
                                    "X9736C-FX",
                                    "X9736PQ"
                                ],
                                "default": "EMPTY",
                                "x-omitempty": true
                            },
                            "node_list":{
                                "description": "List of Switches and modules.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "module_1": "",
                                "module_2": "",
                                "module_3": "",
                                "module_4": "",
                                "module_5": "",
                                "module_6": "",
                                "module_7": "",
                                "module_8": "",
                                "module_9": "",
                                "module_10": "",
                                "module_11": "",
                                "module_12": "",
                                "module_13": "",
                                "module_14": "",
                                "module_15": "",
                                "module_16": ""
                            },
                            "required_args":{
                                "node_list": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.profiles.switchProfiles":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "external_pool_id":{
                                "description": "The Remote Leaf pool ID.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 255,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "inband_ipv4":{
                                "description": "IPv4 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv4_gateway":{
                                "description": "IPv4 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv6":{
                                "description": "IPv6 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv6_gateway":{
                                "description": "IPv6 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_mgmt_epg":{
                                "description": "Name of the Inband Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_type":{
                                "description": "What is the Role of the Switch in the Fabric.",
                                "type": "list_of_values",
                                "enum": [
                                    "leaf",
                                    "remote-leaf",
                                    "spine",
                                    "tier-2-leaf"
                                ],
                                "default": "leaf",
                                "x-omitempty": true
                            },
                            "ooband_ipv4":{
                                "description": "IPv4 Address of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ooband_ipv4_gateway":{
                                "description": "IPv4 Gateway of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ooband_ipv6":{
                                "description": "IPv6 Address of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ooband_ipv6_gateway":{
                                "description": "IPv6 Gateway of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "external_pool_id": "",
                                "inband_ipv4": "",
                                "inband_ipv4_gateway": "",
                                "inband_ipv6": "",
                                "inband_ipv6_gateway": "",
                                "ooband_ipv4": "",
                                "ooband_ipv4_gateway": "",
                                "ooband_ipv6": "",
                                "ooband_ipv6_gateway": "",
                                "vpc_domain_id": "",
                                "vpc_name": ""
                            },
                            "ooband_mgmt_epg":{
                                "description": "Name of the Out-of-Band Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "inband_mgmt_epg": "",
                                "node_id": "",
                                "node_type": "",
                                "ooband_mgmt_epg": "",
                                "pod_id": "",
                                "serial_number": "",
                                "site_group": "",
                                "switch_model": "",
                                "switch_name": ""
                            },
                            "serial_number":{
                                "description": "Serial Number of the Switch.",
                                "type": "string",
                                "minimum": 9,
                                "maximum": 11,
                                "pattern":"^([A-Z]{3}[2-3][\\d]([0][1-9]|[1-4][0-9]|[5][1-3])[\\dA-Z]{4}|TEP-1-[\\d]{3})$",
                                "x-omitempty": true
                            },
                            "switch_model":{
                                "description": "Switch Models.",
                                "type": "list_of_values",
                                "enum": [
                                    "9504",
                                    "9508",
                                    "9516",
                                    "93108TC-EX",
                                    "93108TC-FX",
                                    "93120TX",
                                    "9316D-GX",
                                    "93180YC-EX",
                                    "93180YC-FX",
                                    "93180YC-FX3",
                                    "93216TC-FX2",
                                    "93240YC-FX2",
                                    "9332C",
                                    "9332D-GX2B",
                                    "93360YC-FX2",
                                    "9336C-FX2",
                                    "9336PQ",
                                    "9348GC-FXP",
                                    "93600CD-GX",
                                    "9364C",
                                    "9364C-GX",
                                    "9364D-GX2A",
                                    "9396PX"
                                ],
                                "default": "93180YC-FX",
                                "x-omitempty": true
                            },
                            "switch_name":{
                                "description": "Hostname of the Switch.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "vpc_domain_id":{
                                "description": "An ID Number between 1 and 1001 to Identify the VPC pair.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 1001,
                                "default": 201,
                                "x-omitempty": true
                            },
                            "vpc_name":{
                                "description": "Name of the VPC Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.switches.leafPolicyGroup":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "bfd_ipv4_policy":{
                                "description": "Name of the BFD IPv4 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_ipv6_policy":{
                                "description": "Name of the BFD IPv6 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_multihop_ipv4_policy":{
                                "description": "Name of the BFD MultiHop IPv4 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_multihop_ipv6_policy":{
                                "description": "Name of the BFD MultiHop IPv6 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_leaf_policy":{
                                "description": "Name of the Control Plane Policing Leaf Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_pre-filter":{
                                "description": "Name of the Control Plane Policing Pre-Filter Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dot1x_node_authentication_policy":{
                                "description": "Name of the 802.1x Node Authentication Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "equipment_flash_config":{
                                "description": "Name of the Equipment Flash Config Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fast_link_failover_policy":{
                                "description": "Name of the Fast Link Failover Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_node_policy":{
                                "description": "Name of the Fibre Channel Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_san_policy":{
                                "description": "Name of the Fibre Channel SAN Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "forward_scale_profile_policy":{
                                "description": "Name of the Forward Scale Profile Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "monitoring_policy":{
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_node_policy":{
                                "description": "Name of the Netflow Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "bfd_ipv4_policy": "",
                                "bfd_ipv6_policy": "",
                                "bfd_multihop_ipv4_policy": "",
                                "bfd_multihop_ipv6_policy": "",
                                "cdp_interface_policy": "",
                                "copp_leaf_policy": "",
                                "copp_pre-filter": "",
                                "description": "",
                                "dot1x_node_authentication_policy": "",
                                "fast_link_failover_policy": "",
                                "fibre_channel_node_policy": "",
                                "fibre_channel_san_policy": "",
                                "forward_scale_profile_policy": "",
                                "lldp_interface_policy": "",
                                "netflow_node_policy": "",
                                "poe_node_policy": "",
                                "ptp_node_policy": "",
                                "spanning_tree_interface_policy": "",
                                "synce_node_policy": "",
                                "usb_configuration_policy": ""
                            },
                            "poe_node_policy":{
                                "description": "Name of the PoE Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ptp_node_policy":{
                                "description": "Name of the Precision Time Protocol Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "site_group": ""
                            },
                            "spanning_tree_interface_policy":{
                                "description": "Name of the Spanning Tree Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "synce_node_policy":{
                                "description": "Name of the Synce Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "usb_configuration_policy":{
                                "description": "Name of the USB Configuration Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.switches.portConvert":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "convert_to":{
                                "description": "Port Conversion To Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "downlink",
                                    "uplink"
                                ],
                                "default": "downlink",
                                "x-omitempty": true
                            },
                            "node_list":{
                                "description": "List of Switches to perform the conversion on.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "port_list":{
                                "description": "List of Ports to perform the conversion on.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 108,
                                "default": 53,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "convert_to": "",
                                "node_list": "",
                                "port_list": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.switches.spinePolicyGroup":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "bfd_ipv4_policy":{
                                "description": "Name of the BFD IPv4 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_ipv6_policy":{
                                "description": "Name of the BFD IPv6 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_pre-filter":{
                                "description": "Name of the Control Plane Policing Pre-Filter Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_spine_policy":{
                                "description": "Name of the Control Plane Policing Spine Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "bfd_ipv4_policy": "",
                                "bfd_ipv6_policy": "",
                                "cdp_interface_policy": "",
                                "copp_pre-filter": "",
                                "copp_spine_policy": "",
                                "description": "",
                                "lldp_interface_policy": "",
                                "usb_configuration_policy": ""
                            },
                            "required_args": {
                                "name": "",
                                "site_group": ""
                            },
                            "usb_configuration_policy":{
                                "description": "Name of the USB Configuration Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.Controllers":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "datacenter":{
                                "description": "Name of the Data Center.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern":"^.+$",
                                "x-omitempty": true
                            },
                            "domain_name":{
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dvs_version":{
                                "description": "Version fo the DVS Switch for a VMware DVS.",
                                "type": "list_of_values",
                                "enum": [
                                    "6.5",
                                    "6.6",
                                    "7.0",
                                    "unmanaged"
                                ],
                                "default": "unmanaged",
                                "x-omitempty": true
                            },
                            "hostname":{
                                "description": "Hostname.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "monitoring_policy": ""
                            },
                            "required_args": {
                                "datacenter": "",
                                "domain_name": "",
                                "dvs_version": "",
                                "hostname": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "site_group": "",
                                "stats_collection": "",
                                "switch_scope": "",
                                "trigger_inventory_sync": ""
                            },
                            "stats_collection":{
                                "description": "Flag to Enable Stats Collection from the Virtual Networking Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "switch_scope":{
                                "description": "The scope of Virtual Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "MicrosoftSCVMM",
                                    "cloudfoundry",
                                    "iaas",
                                    "kubernetes",
                                    "network",
                                    "nsx",
                                    "openshift",
                                    "openstack",
                                    "rhev",
                                    "unmanaged",
                                    "vm"
                                ],
                                "default": "read-write",
                                "x-omitempty": true
                            },
                            "trigger_inventory_sync":{
                                "description": "Trigger Inventory Sync with the Controller.",
                                "type": "list_of_values",
                                "enum": [
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.Credentials":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "domain_name":{
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "password":{
                                "description": "Controller Login Password Identifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "domain_name": "",
                                "password": "",
                                "site_group": "",
                                "username": ""
                            },
                            "vmm_password":{
                                "description": "Controller Login Password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.Domains":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "access_mode":{
                                "description": "Virtual Networking Read or Write Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "read-only",
                                    "read-write"
                                ],
                                "default": "read-write",
                                "x-omitempty": true
                            },
                            "delimiter":{
                                "description": "The delimiter symbol to use with the VMware portgroup name.  The acceptable symbols are |, ~, !, @, ^, +, =, and _..",
                                "type": "list_of_values",
                                "enum": [
                                    "|",
                                    "~",
                                    "!",
                                    "@",
                                    "^",
                                    "+",
                                    "=",
                                    "_"
                                ],
                                "default": "|",
                                "x-omitempty": true
                            },
                            "enable_tag_collection":{
                                "description": "vCenter Tag collection for micro-Segmentation.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "enable_vm_folder_data_retrieval":{
                                "description": "vCenter VM Folder collection for micro-Segmentation.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "endpoint_retention_time":{
                                "description": "The number of seconds an endpoint is retained after it has been marked for deletion.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 600,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "uplink_names": ""
                            },
                            "required_args": {
                                "access_mode": "",
                                "delimiter": "",
                                "enable_tag_collection": "",
                                "endpoint_retention_time": "",
                                "enable_vm_folder_data_retrieval": "",
                                "name": "",
                                "site_group": "",
                                "switch_mode": "",
                                "switch_provider": "",
                                "vlan_pool": ""
                            },
                            "switch_mode":{
                                "description": "The mode of Virtual Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "cf",
                                    "default",
                                    "k8s",
                                    "nsx",
                                    "ovs",
                                    "rancher",
                                    "rhev",
                                    "openshift",
                                    "unknown"
                                ],
                                "default": "default",
                                "x-omitempty": true
                            },
                            "switch_provider":{
                                "description": "The Switch Vendor.",
                                "type": "list_of_values",
                                "enum": [
                                    "CloudFoundry",
                                    "Kubernetes",
                                    "Microsoft",
                                    "OpenShift",
                                    "OpenStack",
                                    "Redhat",
                                    "VMware"
                                ],
                                "default": "VMware",
                                "x-omitempty": true
                            },
                            "uplink_names":{
                                "description": "Names for the Virtual Networking Uplinks.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vlan_pool":{
                                "description": "Name of the VLAN Pool to Assign.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.enhancedLag":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "domain_name":{
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mode":{
                                "description": "LACP Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "active",
                                    "passive"
                                ],
                                "default": "active",
                                "x-omitempty": true
                            },
                            "load_balancing_mode":{
                                "description": "Load balancing algorithm.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-ip",
                                    "dst-ip-l4port",
                                    "dst-ip-l4port-vlan",
                                    "dst-ip-vlan",
                                    "dst-l4port",
                                    "dst-mac",
                                    "src-dst-ip",
                                    "src-dst-ip-l4port",
                                    "src-dst-ip-l4port-vlan",
                                    "src-dst-ip-vlan",
                                    "src-dst-l4port",
                                    "src-dst-mac",
                                    "src-ip",
                                    "src-ip-l4port",
                                    "src-ip-l4port-vlan",
                                    "src-ip-vlan",
                                    "src-l4port",
                                    "src-mac",
                                    "src-port-id",
                                    "vlan"
                                ],
                                "default": "src-dst-ip",
                                "x-omitempty": true
                            },
                            "number_of_links":{
                                "description": "The number of links to add to the enhanced LAG Policy.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 2,
                                "maximum": 8,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "domain_name": "",
                                "mode": "",
                                "load_balancing_mode": "",
                                "number_of_links": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.vmm.vswitchPolicy":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "domain_name":{
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mtu_policy":{
                                "description": "Name of the L2 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "vmm_netflow_exporter_policy": ""
                            },
                            "required_args": {
                                "cdp_interface_policy": "",
                                "domain_name": "",
                                "lldp_interface_policy": "",
                                "mtu_policy": "",
                                "port_channel_policy": "",
                                "site_group": ""
                            },
                            "vmm_netflow_exporter_policy":{
                                "description": "Name of the Netlfow Exporters for VM Networking Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.exportPolicy":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "format":{
                                "description": "Format of the Backup File.",
                                "type": "list_of_values",
                                "enum": [
                                    "json",
                                    "xml"
                                ],
                                "default": "json",
                                "x-omitempty": true
                            },
                            "include_secure_fields":{
                                "description": "Flag to include secure fields.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "max_snapshot_count":{
                                "description": "Maximum Number of Snapshots to allow.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 10,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "format": "",
                                "include_secure_fields": "",
                                "max_snapshot_count": "",
                                "name": "",
                                "scheduled_days": "",
                                "scheduled_hour": "",
                                "scheduled_minute": "",
                                "site_group": "",
                                "snapshot": "",
                                "start_now": ""
                            },
                            "scheduled_days":{
                                "description": "Scheduled Days.",
                                "type": "list_of_values",
                                "enum": [
                                    "every-day",
                                    "even-day",
                                    "odd-day",
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                ],
                                "default": "json",
                                "x-omitempty": true
                            },
                            "scheduled_hour":{
                                "description": "Hour of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 23,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "scheduled_minute":{
                                "description": "Minute of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 59,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "snapshot":{
                                "description": "Flag to define if the backup is a snapshot.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "start_now":{
                                "description": "Flag to Start the Backup now.",
                                "type": "list_of_values",
                                "enum": [
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.firmware.Policy":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "compatibility_check":{
                                "description": "A property for specifying whether compatibility checks should be ignored when applying the firmware policy.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "graceful_upgrade":{
                                "description": "This option will enable Graceful Insertion and Removal mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "notify_conditions":{
                                "description": "Maintenance Policy Admin Notification.",
                                "type": "list_of_values",
                                "enum": [
                                    "notifyAlwaysBetweenSets",
                                    "notifyNever",
                                    "notifyOnlyOnFailures"
                                ],
                                "default": "notifyOnlyOnFailures",
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "policy_type":{
                                "description": "The Firmware Type for the Maintenance Group.",
                                "type": "list_of_values",
                                "enum": [
                                    "controller",
                                    "switch"
                                ],
                                "default": "switch",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "compatibility_check": "",
                                "graceful_upgrade": "",
                                "name": "",
                                "notify_conditions": "",
                                "policy_type": "",
                                "run_mode": "",
                                "simulator": "",
                                "site_group": "",
                                "version_check_override": ""
                            },
                            "run_mode":{
                                "description": "Maintenance Policy Admin Notification.",
                                "type": "list_of_values",
                                "enum": [
                                    "pauseAlwaysBetweenSets",
                                    "pauseNever",
                                    "pauseOnlyOnFailures"
                                ],
                                "default": "pauseOnlyOnFailures",
                                "x-omitempty": true
                            },
                            "simulator":{
                                "description": "Is this an APIC Simulator.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "version_check_override":{
                                "description": "A property for specifying whether the firmware upgrade should be triggered or not. .",
                                "type": "list_of_values",
                                "enum": [
                                    "trigger",
                                    "trigger-immediate",
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            },
                            "scheduled_days":{
                                "description": "Scheduled Days.",
                                "type": "list_of_values",
                                "enum": [
                                    "every-day",
                                    "even-day",
                                    "odd-day",
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                ],
                                "default": "json",
                                "x-omitempty": true
                            },
                            "scheduled_hour":{
                                "description": "Hour of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 23,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "scheduled_minute":{
                                "description": "Minute of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 59,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "snapshot":{
                                "description": "Flag to define if the backup is a snapshot.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "start_now":{
                                "description": "Flag to Start the Backup now.",
                                "type": "list_of_values",
                                "enum": [
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.firmware.MaintenanceGroups":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "maintenance_group_policy":{
                                "description": "Name of the Firmware Maintenance Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_list":{
                                "description": "List of Switches to add to the Maintenance Group.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "maintenance_group_policy": "",
                                "name": "",
                                "node_list": "",
                                "site_group": "",
                                "start_now": ""
                            },
                            "start_now":{
                                "description": "Flag to Start an Upgrade right now.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.globalSecurity":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "enable_lockout":{
                                "description": "Enable User Lockout.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "lockout_duration":{
                                "description": "Lockout Duration.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 1440,
                                "default": 60,
                                "x-omitempty": true
                            },
                            "max_failed_attempts":{
                                "description": "Max Failed Attempts.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 15,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "maximum_validity_period":{
                                "description": "Maximum Validity Period.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 24,
                                "default": 24,
                                "x-omitempty": true
                            },
                            "max_failed_attempts_window":{
                                "description": "Max Failed Attempts Window.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 720,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "password_change_interval":{
                                "description": "Password Change Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 745,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "password_change_interval_enforce":{
                                "description": "Password Change Interval Enforce.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "password_changes_within_interval":{
                                "description": "Password Changes within Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 10,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "password_expiration_warn_time":{
                                "description": "Password Expiration Warn Time.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 30,
                                "default": 15,
                                "x-omitempty": true
                            },
                            "password_strength_check":{
                                "description": "Password Strength Check.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "enable_lockout": "",
                                "lockout_duration": "",
                                "max_failed_attempts": "",
                                "max_failed_attempts_window": "",
                                "maximum_validity_period": "",
                                "password_change_interval": "",
                                "password_change_interval_enforce": "",
                                "password_changes_within_interval": "",
                                "password_expiration_warn_time": "",
                                "password_strength_check": "",
                                "site_group": "",
                                "user_passwords_to_store_count": "",
                                "web_session_idle_timeout": "",
                                "web_token_timeout": ""
                            },
                            "user_passwords_to_store_count":{
                                "description": "User Passwords To Store Count.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 15,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "web_session_idle_timeout":{
                                "description": "Web Session Idle Timeout.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 60,
                                "maximum": 65525,
                                "default": 1200,
                                "x-omitempty": true
                            },
                            "web_token_timeout":{
                                "description": "Web Token Timeout.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 300,
                                "maximum": 9600,
                                "default": 600,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Authentication":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "console_login_domain":{
                                "description": "Login Domain Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern":"^[a-zA-Z0-9][a-zA-Z0-9_]+$",
                                "x-omitempty": true
                            },
                            "console_realm":{
                                "description": "Available Realms for Console Authentication.",
                                "type": "list_of_values",
                                "enum": [
                                    "duo_proxy_ldap",
                                    "duo_proxy_radius",
                                    "local",
                                    "ldap", 
                                    "radius",
                                    "rsa",
                                    "saml",
                                    "tacacs",
                                    "true"
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "default_login_domain":{
                                "description": "Login Domain Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern":"^[a-zA-Z0-9][a-zA-Z0-9_]+$",
                                "x-omitempty": true
                            },
                            "default_realm":{
                                "description": "Available Realms for Default Authentication.",
                                "type": "list_of_values",
                                "enum": [
                                    "duo_proxy_ldap",
                                    "duo_proxy_radius",
                                    "local",
                                    "ldap", 
                                    "radius",
                                    "rsa",
                                    "saml",
                                    "tacacs",
                                    "true"
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "fallback_domain_avialability":{
                                "description": "Should the local domain be available when the default authentication is not local and the providers are reachable.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "console_login_domain": "",
                                "default_login_domain": ""
                            },
                            "remote_user_login_policy":{
                                "description": "What is the default Policy if user fails login due to invalid credentials.",
                                "type": "list_of_values",
                                "enum": [
                                    "assign-default-role",
                                    "no-login"
                                ],
                                "default": "no-login",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "console_realm": "",
                                "default_realm": "",
                                "fallback_domain_avialability": "",
                                "remote_user_login_policy": "",
                                "use_icmp_reachable_providers_only": ""
                            },
                            "use_icmp_reachable_providers_only":{
                                "description": "Flag to turn on ICMP check for Providers.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Radius":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "authorization_protocol":{
                                "description": "Authorization Protocol to Use.",
                                "type": "list_of_values",
                                "enum": [
                                    "chap",
                                    "mschap",
                                    "pap"
                                ],
                                "default": "pap",
                                "x-omitempty": true
                            },
                            "hosts":{
                                "description": "List of RADIUS Servers.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "key":{
                                "description": "Secret Key Variable Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "login_domain":{
                                "description": "Login Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern":"^([a-zA-Z0-9][a-zA-Z0-9\\_]+)$",
                                "x-omitempty": true
                            },
                            "monitoring_password":{
                                "description": "RADIUS Server Monitoring Password Identifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "monitoring_password": "",
                                "username": ""
                            },
                            "port":{
                                "description": "RADIUS Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 1812,
                                "x-omitempty": true
                            },
                            "radius_key":{
                                "description": "Radius secret key.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern":"[\\\\ #]",
                                "x-omitempty": true
                            },
                            "radius_monitoring_password":{
                                "description": "Radius monitoring password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "authorization_protocol": "",
                                "hosts": "",
                                "key": "",
                                "login_domain": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "port": "",
                                "retries": "",
                                "server_monitoring": "",
                                "site_group": "",
                                "timeout": "",
                                "type": ""
                            },
                            "retries":{
                                "description": "Number of Retries to Attempt.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "server_monitoring":{
                                "description": "Flag to enable or disable RADIUS Server Monitoring.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "timeout":{
                                "description": "Timeout in Seconds.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 5,
                                "maximum": 60,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "type":{
                                "description": "RADIUS Server Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "duo",
                                    "radius",
                                    "rsa"
                                ],
                                "default": "radius",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.remoteHost":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "authentication_type":{
                                "description": "Remote Host authentication type.",
                                "type": "list_of_values",
                                "enum": [
                                    "usePassword",
                                    "useSshKeyContents"
                                ],
                                "default": "usePassword",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "password": "",
                                "username": ""
                            },
                            "protocol":{
                                "description": "Remote Host authentication type.",
                                "type": "list_of_values",
                                "enum": [
                                    "ftp",
                                    "scp",
                                    "sftp"
                                ],
                                "default": "sftp",
                                "x-omitempty": true
                            },
                            "password":{
                                "description": "Remote Host Password Identifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "remote_hosts":{
                                "description": "List of Remote Hosts.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "remote_password":{
                                "description": "Remote Password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            },
                            "remote_path":{
                                "description": "Remote Path.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            },
                            "remote_port":{
                                "description": "Remote Host Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 22,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "authentication_type": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "protocol": "",
                                "remote_hosts": "",
                                "remote_path": "",
                                "remote_port": "",
                                "scheduler_name": "",
                                "site_group": ""
                            },
                            "scheduler_name":{
                                "description": "Scheduler Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ssh_key_contents":{
                                "description": "SSH Key Contents.",
                                "type": "string",
                                "minimum": 512,
                                "maximum": 4096,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            },
                            "ssh_key_passphrase":{
                                "description": "SSH Key Passphrase.",
                                "type": "string",
                                "minimum": 512,
                                "maximum": 512,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Tacacs":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "authorization_protocol":{
                                "description": "Authorization Protocol to Use.",
                                "type": "list_of_values",
                                "enum": [
                                    "chap",
                                    "mschap",
                                    "pap"
                                ],
                                "default": "pap",
                                "x-omitempty": true
                            },
                            "hosts":{
                                "description": "List of TACACS+ Servers.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "key":{
                                "description": "Secret Key Variable Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "login_domain":{
                                "description": "Login Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern":"^([a-zA-Z0-9][a-zA-Z0-9\\_]+)$",
                                "x-omitempty": true
                            },
                            "monitoring_password":{
                                "description": "TACACS+ Server Monitoring Password Identifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "monitoring_password": "",
                                "username": ""
                            },
                            "port":{
                                "description": "TACACS+ Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 49,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "audit_logs": "",
                                "authorization_protocol": "",
                                "events": "",
                                "faults": "",
                                "hosts": "",
                                "key": "",
                                "login_domain": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "port": "",
                                "retries": "",
                                "server_monitoring": "",
                                "session_logs": "",
                                "site_group": "",
                                "timeout": ""
                                },
                            "retries":{
                                "description": "Number of Retries to Attempt.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "server_monitoring":{
                                "description": "Flag to enable or disable TACACS+ Server Monitoring.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "tacacs_key":{
                                "description": "TACACS+ secret key.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern":"[\\\\ #]",
                                "x-omitempty": true
                            },
                            "tacacs_monitoring_password":{
                                "description": "TACACS+ monitoring password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern":"^.*$",
                                "x-omitempty": true
                            },
                            "timeout":{
                                "description": "Timeout in Seconds.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 5,
                                "maximum": 60,
                                "default": 5,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.DateandTime":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "administrative_state":{
                                "description": "Date and Time Policy Administrative State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "display_format":{
                                "description": "Date and Time Display Format.",
                                "type": "list_of_values",
                                "enum": [
                                    "local",
                                    "utc"
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "master_mode":{
                                "description": "Date and Time Display Format.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "offset_state":{
                                "description": "Date and Time Policy Offset State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "administrative_state": "",
                                "display_format": "",
                                "master_mode": "",
                                "offset_state": "",
                                "server_state": "",
                                "site_group": "",
                                "stratum_value": "",
                                "time_zone": ""
                            },
                            "server_state":{
                                "description": "Date and Time Server State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ]
                            },
                            "stratum_value":{
                                "description": "Date and Time Server Stratum Value.",
                                "type": "list_of_values",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15
                                ]
                            },
                            "time_zone":{
                                "description": "List of Time Zones.",
                                "type": "list_of_values",
                                "enum": [
                                    "UTC",
                                    "Africa/Abidjan",
                                    "Africa/Accra",
                                    "Africa/Addis_Ababa",
                                    "Africa/Algiers",
                                    "Africa/Asmara",
                                    "Africa/Bamako",
                                    "Africa/Bangui",
                                    "Africa/Banjul",
                                    "Africa/Bissau",
                                    "Africa/Blantyre",
                                    "Africa/Brazzaville",
                                    "Africa/Bujumbura",
                                    "Africa/Cairo",
                                    "Africa/Casablanca",
                                    "Africa/Ceuta",
                                    "Africa/Conakry",
                                    "Africa/Dakar",
                                    "Africa/Dar_es_Salaam",
                                    "Africa/Djibouti",
                                    "Africa/Douala",
                                    "Africa/El_Aaiun",
                                    "Africa/Freetown",
                                    "Africa/Gaborone",
                                    "Africa/Harare",
                                    "Africa/Johannesburg",
                                    "Africa/Juba",
                                    "Africa/Kampala",
                                    "Africa/Khartoum",
                                    "Africa/Kigali",
                                    "Africa/Kinshasa",
                                    "Africa/Lagos",
                                    "Africa/Libreville",
                                    "Africa/Lome",
                                    "Africa/Luanda",
                                    "Africa/Lubumbashi",
                                    "Africa/Lusaka",
                                    "Africa/Malabo",
                                    "Africa/Maputo",
                                    "Africa/Maseru",
                                    "Africa/Mbabane",
                                    "Africa/Mogadishu",
                                    "Africa/Monrovia",
                                    "Africa/Nairobi",
                                    "Africa/Ndjamena",
                                    "Africa/Niamey",
                                    "Africa/Nouakchott",
                                    "Africa/Ouagadougou",
                                    "Africa/Porto-Novo",
                                    "Africa/Sao_Tome",
                                    "Africa/Tripoli",
                                    "Africa/Tunis",
                                    "Africa/Windhoek",
                                    "America/Adak",
                                    "America/Anchorage",
                                    "America/Anguilla",
                                    "America/Antigua",
                                    "America/Araguaina",
                                    "America/Argentina/Buenos_Aires",
                                    "America/Argentina/Catamarca",
                                    "America/Argentina/Cordoba",
                                    "America/Argentina/Jujuy",
                                    "America/Argentina/La_Rioja",
                                    "America/Argentina/Mendoza",
                                    "America/Argentina/Rio_Gallegos",
                                    "America/Argentina/Salta",
                                    "America/Argentina/San_Juan",
                                    "America/Argentina/San_Luis",
                                    "America/Argentina/Tucuman",
                                    "America/Argentina/Ushuaia",
                                    "America/Aruba",
                                    "America/Asuncion",
                                    "America/Atikokan",
                                    "America/Bahia_Banderas",
                                    "America/Barbados",
                                    "America/Belem",
                                    "America/Belize",
                                    "America/Blanc-Sablon",
                                    "America/Boa_Vista",
                                    "America/Bogota",
                                    "America/Boise",
                                    "America/Cambridge_Bay",
                                    "America/Campo_Grande",
                                    "America/Cancun",
                                    "America/Caracas",
                                    "America/Cayenne",
                                    "America/Cayman",
                                    "America/Chicago",
                                    "America/Chihuahua",
                                    "America/Costa_Rica",
                                    "America/Creston",
                                    "America/Cuiaba",
                                    "America/Curacao",
                                    "America/Danmarkshavn",
                                    "America/Dawson",
                                    "America/Dawson_Creek",
                                    "America/Denver",
                                    "America/Detroit",
                                    "America/Dominica",
                                    "America/Edmonton",
                                    "America/Eirunepe",
                                    "America/El_Salvador",
                                    "America/Fortaleza",
                                    "America/Glace_Bay",
                                    "America/Godthab",
                                    "America/Goose_Bay",
                                    "America/Grand_Turk",
                                    "America/Grenada",
                                    "America/Guadeloupe",
                                    "America/Guatemala",
                                    "America/Guayaquil",
                                    "America/Guyana",
                                    "America/Halifax",
                                    "America/Havana",
                                    "America/Hermosillo",
                                    "America/Indiana/Indianapolis",
                                    "America/Indiana/Knox",
                                    "America/Indiana/Marengo",
                                    "America/Indiana/Petersburg",
                                    "America/Indiana/Tell_City",
                                    "America/Indiana/Vevay",
                                    "America/Indiana/Vincennes",
                                    "America/Indiana/Winamac",
                                    "America/Inuvik",
                                    "America/Iqaluit",
                                    "America/Jamaica",
                                    "America/Juneau",
                                    "America/Kentucky/Louisville",
                                    "America/Kentucky/Monticello",
                                    "America/Kralendijk",
                                    "America/La_Paz",
                                    "America/Lima",
                                    "America/Los_Angeles",
                                    "America/Lower_Princes",
                                    "America/Maceio",
                                    "America/Managua",
                                    "America/Manaus",
                                    "America/Marigot",
                                    "America/Martinique",
                                    "America/Matamoros",
                                    "America/Mazatlan",
                                    "America/Menominee",
                                    "America/Merida",
                                    "America/Metlakatla",
                                    "America/Mexico_City",
                                    "America/Miquelon",
                                    "America/Moncton",
                                    "America/Monterrey",
                                    "America/Montevideo",
                                    "America/Montreal",
                                    "America/Montserrat",
                                    "America/Nassau",
                                    "America/New_York",
                                    "America/Nipigon",
                                    "America/Nome",
                                    "America/Noronha",
                                    "America/North_Dakota/Beulah",
                                    "America/North_Dakota/Center",
                                    "America/North_Dakota/New_Salem",
                                    "America/Ojinaga",
                                    "America/Panama",
                                    "America/Pangnirtung",
                                    "America/Paramaribo",
                                    "America/Phoenix",
                                    "America/Port-au-Prince",
                                    "America/Port_of_Spain",
                                    "America/Porto_Velho",
                                    "America/Puerto_Rico",
                                    "America/Rainy_River",
                                    "America/Rankin_Inlet",
                                    "America/Recife",
                                    "America/Regina",
                                    "America/Resolute",
                                    "America/Rio_Branco",
                                    "America/Santa_Isabel",
                                    "America/Santarem",
                                    "America/Santiago",
                                    "America/Santo_Domingo",
                                    "America/Sao_Paulo",
                                    "America/Scoresbysund",
                                    "America/Shiprock",
                                    "America/Sitka",
                                    "America/St_Barthelemy",
                                    "America/St_Johns",
                                    "America/St_Kitts",
                                    "America/St_Lucia",
                                    "America/St_Thomas",
                                    "America/St_Vincent",
                                    "America/Swift_Current",
                                    "America/Tegucigalpa",
                                    "America/Thule",
                                    "America/Thunder_Bay",
                                    "America/Tijuana",
                                    "America/Toronto",
                                    "America/Tortola",
                                    "America/Vancouver",
                                    "America/Whitehorse",
                                    "America/Winnipeg",
                                    "America/Yakutat",
                                    "America/Yellowknife",
                                    "Antarctica/Casey",
                                    "Antarctica/Davis",
                                    "Antarctica/DumontDUrville",
                                    "Antarctica/Macquarie",
                                    "Antarctica/Mawson",
                                    "Antarctica/McMurdo",
                                    "Antarctica/Palmer",
                                    "Antarctica/Rothera",
                                    "Antarctica/South_Pole",
                                    "Antarctica/Syowa",
                                    "Antarctica/Vostok",
                                    "Arctic/Longyearbyen",
                                    "Asia/Aden",
                                    "Asia/Almaty",
                                    "Asia/Amman",
                                    "Asia/Anadyr",
                                    "Asia/Aqtau",
                                    "Asia/Aqtobe",
                                    "Asia/Ashgabat",
                                    "Asia/Baghdad",
                                    "Asia/Bahrain",
                                    "Asia/Baku",
                                    "Asia/Bangkok",
                                    "Asia/Beirut",
                                    "Asia/Bishkek",
                                    "Asia/Brunei",
                                    "Asia/Choibalsan",
                                    "Asia/Chongqing",
                                    "Asia/Colombo",
                                    "Asia/Damascus",
                                    "Asia/Dhaka",
                                    "Asia/Dili",
                                    "Asia/Dubai",
                                    "Asia/Dushanbe",
                                    "Asia/Gaza",
                                    "Asia/Harbin",
                                    "Asia/Hebron",
                                    "Asia/Ho_Chi_Minh",
                                    "Asia/Hong_Kong",
                                    "Asia/Hovd",
                                    "Asia/Irkutsk",
                                    "Asia/Jakarta",
                                    "Asia/Jayapura",
                                    "Asia/Jerusalem",
                                    "Asia/Kabul",
                                    "Asia/Kamchatka",
                                    "Asia/Karachi",
                                    "Asia/Kashgar",
                                    "Asia/Kathmandu",
                                    "Asia/Kolkata",
                                    "Asia/Krasnoyarsk",
                                    "Asia/Kuala_Lumpur",
                                    "Asia/Kuching",
                                    "Asia/Kuwait",
                                    "Asia/Macau",
                                    "Asia/Magadan",
                                    "Asia/Makassar",
                                    "Asia/Manila",
                                    "Asia/Muscat",
                                    "Asia/Nicosia",
                                    "Asia/Novokuznetsk",
                                    "Asia/Novosibirsk",
                                    "Asia/Omsk",
                                    "Asia/Oral",
                                    "Asia/Phnom_Penh",
                                    "Asia/Pontianak",
                                    "Asia/Pyongyang",
                                    "Asia/Qatar",
                                    "Asia/Qyzylorda",
                                    "Asia/Rangoon",
                                    "Asia/Riyadh",
                                    "Asia/Sakhalin",
                                    "Asia/Samarkand",
                                    "Asia/Seoul",
                                    "Asia/Shanghai",
                                    "Asia/Singapore",
                                    "Asia/Taipei",
                                    "Asia/Tashkent",
                                    "Asia/Tbilisi",
                                    "Asia/Tehran",
                                    "Asia/Thimphu",
                                    "Asia/Tokyo",
                                    "Asia/Ulaanbaatar",
                                    "Asia/Urumqi",
                                    "Asia/Vientiane",
                                    "Asia/Vladivostok",
                                    "Asia/Yakutsk",
                                    "Asia/Yekaterinburg",
                                    "Asia/Yerevan",
                                    "Atlantic/Azores",
                                    "Atlantic/Bermuda",
                                    "Atlantic/Canary",
                                    "Atlantic/Cape_Verde",
                                    "Atlantic/Faroe",
                                    "Atlantic/Madeira",
                                    "Atlantic/Reykjavik",
                                    "Atlantic/South_Georgia",
                                    "Atlantic/St_Helena",
                                    "Atlantic/Stanley",
                                    "Australia/Adelaide",
                                    "Australia/Brisbane",
                                    "Australia/Broken_Hill",
                                    "Australia/Currie",
                                    "Australia/Darwin",
                                    "Australia/Eucla",
                                    "Australia/Hobart",
                                    "Australia/Lindeman",
                                    "Australia/Lord_Howe",
                                    "Australia/Melbourne",
                                    "Australia/Perth",
                                    "Australia/Sydney",
                                    "Coordinated Universal Time",
                                    "Europe/Amsterdam",
                                    "Europe/Andorra",
                                    "Europe/Athens",
                                    "Europe/Belgrade",
                                    "Europe/Berlin",
                                    "Europe/Bratislava",
                                    "Europe/Brussels",
                                    "Europe/Bucharest",
                                    "Europe/Budapest",
                                    "Europe/Chisinau",
                                    "Europe/Copenhagen",
                                    "Europe/Dublin",
                                    "Europe/Gibraltar",
                                    "Europe/Guernsey",
                                    "Europe/Helsinki",
                                    "Europe/Isle_of_Man",
                                    "Europe/Istanbul",
                                    "Europe/Jersey",
                                    "Europe/Kaliningrad",
                                    "Europe/Kiev",
                                    "Europe/Lisbon",
                                    "Europe/Ljubljana",
                                    "Europe/London",
                                    "Europe/Luxembourg",
                                    "Europe/Madrid",
                                    "Europe/Malta",
                                    "Europe/Mariehamn",
                                    "Europe/Minsk",
                                    "Europe/Monaco",
                                    "Europe/Moscow",
                                    "Europe/Oslo",
                                    "Europe/Paris",
                                    "Europe/Podgorica",
                                    "Europe/Prague",
                                    "Europe/Riga",
                                    "Europe/Rome",
                                    "Europe/Samara",
                                    "Europe/San_Marino",
                                    "Europe/Sarajevo",
                                    "Europe/Simferopol",
                                    "Europe/Skopje",
                                    "Europe/Sofia",
                                    "Europe/Stockholm",
                                    "Europe/Tallinn",
                                    "Europe/Tirane",
                                    "Europe/Uzhgorod",
                                    "Europe/Vaduz",
                                    "Europe/Vatican",
                                    "Europe/Vienna",
                                    "Europe/Vilnius",
                                    "Europe/Volgograd",
                                    "Europe/Warsaw",
                                    "Europe/Zagreb",
                                    "Europe/Zaporozhye",
                                    "Europe/Zurich",
                                    "Indian/Antananarivo",
                                    "Indian/Chagos",
                                    "Indian/Christmas",
                                    "Indian/Cocos",
                                    "Indian/Comoro",
                                    "Indian/Kerguelen",
                                    "Indian/Mahe",
                                    "Indian/Maldives",
                                    "Indian/Mauritius",
                                    "Indian/Mayotte",
                                    "Indian/Reunion",
                                    "Pacific/Apia",
                                    "Pacific/Auckland",
                                    "Pacific/Chatham",
                                    "Pacific/Chuuk",
                                    "Pacific/Easter",
                                    "Pacific/Efate",
                                    "Pacific/Enderbury",
                                    "Pacific/Fakaofo",
                                    "Pacific/Fiji",
                                    "Pacific/Funafuti",
                                    "Pacific/Galapagos",
                                    "Pacific/Gambier",
                                    "Pacific/Guadalcanal",
                                    "Pacific/Guam",
                                    "Pacific/Honolulu",
                                    "Pacific/Johnston",
                                    "Pacific/Kiritimati",
                                    "Pacific/Kosrae",
                                    "Pacific/Kwajalein",
                                    "Pacific/Majuro",
                                    "Pacific/Marquesas",
                                    "Pacific/Midway",
                                    "Pacific/Nauru",
                                    "Pacific/Niue",
                                    "Pacific/Norfolk",
                                    "Pacific/Noumea",
                                    "Pacific/Pago_Pago",
                                    "Pacific/Palau",
                                    "Pacific/Pitcairn",
                                    "Pacific/Pohnpei",
                                    "Pacific/Port_Moresby",
                                    "Pacific/Rarotonga",
                                    "Pacific/Saipan",
                                    "Pacific/Tahiti",
                                    "Pacific/Tarawa",
                                    "Pacific/Tongatapu",
                                    "Pacific/Wake",
                                    "Pacific/Wallis"
                                ]
                            }
                        }
                    }
                ]
            },
            "fabric.dnsProfiles":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "default_domain":{
                                "description": "List of Remote Hosts.",
                                "type": "domain",
                                "x-omitempty": true
                            },
                            "dns_providers":{
                                "description": "List of Remote Hosts.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "dns_domains":{
                                "description": "List of Remote Hosts.",
                                "type": "list_of_domains",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "default_domain": "",
                                "description": ""                                
                            },
                            "preferred":{
                                "description": "Preferred DNS Server.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "dns_domains": "",
                                "dns_providers": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "preferred": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "fabric.Ntp":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "hostname":{
                                "description": "Hostname.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "key_id":{
                                "description": "NTP Key Options.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "x-omitempty": true
                            },
                            "maximum_polling_interval":{
                                "description": "The Maximum Polling Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 4,
                                "maximum": 16,
                                "x-omitempty": true
                            },
                            "minimum_polling_interval":{
                                "description": "The Minimum Polling Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 4,
                                "maximum": 16,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "key_id": ""                                
                            },
                            "preferred":{
                                "description": "If the NTP Server is Preferred or not.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "hostname": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "maximum_polling_interval": "",
                                "minimum_polling_interval": "",
                                "preferred": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "fabric.NtpKeys":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "authentication_type":{
                                "description": "The Authentication Protocol to use.",
                                "type": "list_of_values",
                                "enum": [
                                    "md5",
                                    "sha1"
                                ],
                                "default": "sha1",
                                "x-omitempty": true
                            },
                            "key":{
                                "description": "NTP Key Value.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 40,
                                "pattern":"^[\\S+]{1,40}$",
                                "x-omitempty": true
                            },
                            "key_id":{
                                "description": "NTP Key Variable Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "authentication_type": "",
                                "key_id": "",
                                "site_group": "",
                                "trusted": ""
                            },
                            "trusted":{
                                "description": "If the NTP Key is trusted or not.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.smartCallHome":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "contact_information":{
                                "description": "Smart Callhome contact information field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern":"^$|^(?!.{64,})[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+$",
                                "x-omitempty": true
                            },
                            "customer_contact_email":{
                                "description": "Smart Callhome customer contact email field.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "from_email":{
                                "description": "Smart Callhome from email field.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "contact_information": "",
                                "contract_id": "",
                                "customer_id": "",
                                "customer_contact_email": "",
                                "from_email": "",
                                "phone_contact": "",
                                "reply_to_email": "",
                                "site_id": "",
                                "street_address": ""
                            },
                            "phone_contact":{
                                "description": "Callhome contact phone number.",
                                "type": "phone_number",
                                "x-omitempty": true
                            },
                            "reply_to_email":{
                                "description": "Smart Callhome reply to email field.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "admin_state": "",
                                "audit_logs": "",
                                "events": "",
                                "faults": "",
                                "session_logs": "",
                                "site_group": ""
                            },
                            "street_address":{
                                "description": "Smart CallHome street address.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern":"^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.smartDestinations":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "email":{
                                "description": "Smart Callhome destionation email.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "format":{
                                "description": "Format of the Email.",
                                "type": "list_of_values",
                                "enum": [
                                    "aml",
                                    "short-txt",
                                    "xml"
                                ],
                                "default": "short-txt",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "admin_state": "",
                                "email": "",
                                "format": "",
                                "rfc_compliant": "",
                                "site_group": ""
                            },
                            "rfc_compliant":{
                                "description": "Should the Message be RFC Compliant.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.smartSmtpServer":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args": {
                                "username": ""
                            },
                            "port_number":{
                                "description": "Smart SMTP Server",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 25,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "management_epg": "",
                                "management_epg_type": "",
                                "port_number": "",
                                "secure_smtp": "",
                                "smtp_server": "",
                                "site_group": ""
                            },
                            "secure_smtp":{
                                "description": "Does the SMTP Server Require Credentials.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "smtp_password":{
                                "description": "Security SMTP Password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern":"^[\\S+]{1,128}$",
                                "x-omitempty": true
                            },
                            "smtp_server":{
                                "description": "SMTP Server.",
                                "type": "hostname",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpClientGroups":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "clients":{
                                "description": "List of Client Group Clients.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "clients": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "fabric.snmpCommunities":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "community_variable":{
                                "description": "Communtiy Variable Check.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "community_variable": "",
                                "site_group": ""
                            },
                            "snmp_community":{
                                "description": "Community String.",
                                "type": "string",
                                "minimum": 8,
                                "maximum": 32,
                                "pattern":"^([a-zA-Z0-9\\-\\_\\.]+){8,32}$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpDestinations":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "community_variable":{
                                "description": "Communtiy Variable Check.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "host":{
                                "description": "host.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "community_variable": "",
                                "username": "",
                                "v3_security_level": ""
                            },
                            "port":{
                                "description": "SNMP Trap Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 162,
                                "x-omitempty": true
                            },
                            "snmp_community":{
                                "description": "Community String.",
                                "type": "string",
                                "minimum": 8,
                                "maximum": 32,
                                "pattern":"^([a-zA-Z0-9\\-\\_\\.]+){8,32}$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "host": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "port": "",
                                "site_group": "",
                                "version": ""
                            },
                            "v3_security_level":{
                                "description": "The SNMPv3 Security Level.",
                                "type": "list_of_values",
                                "enum": [
                                    "auth",
                                    "noauth",
                                    "priv"
                                ],
                                "default": "priv",
                                "x-omitempty": true
                            },
                            "version":{
                                "description": "SNMP Version.",
                                "type": "list_of_values",
                                "enum": [
                                    "v1",
                                    "v2c",
                                    "v3"
                                ],
                                "default": "v3",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpPolicy":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "audit_logs":{
                                "description": "Audit Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "contact":{
                                "description": "SNMP Policy contact information field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern":"^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "events":{
                                "description": "Audit Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "faults":{
                                "description": "Faults Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "location":{
                                "description": "SNMP location field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern":"^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "contact": "",
                                "location": ""
                            },
                            "required_args": {
                                "admin_state": "",
                                "audit_logs": "",
                                "events": "",
                                "faults": "",
                                "session_logs": "",
                                "site_group": ""
                            },
                            "session_logs":{
                                "description": "Session Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpUsers":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "authorization_key":{
                                "description": "SNMP Authorization Variable Number.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "authorization_type":{
                                "description": "SNMP User Authorization Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "hmac-md5-96",
                                    "hmac-sha1-96",
                                    "hmac-sha2-224",
                                    "hmac-sha2-256",
                                    "hmac-sha2-384",
                                    "hmac-sha2-512"
                                ],
                                "default": "hmac-sha1-96",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "privacy_key": "",
                                "privacy_type": ""
                            },
                            "privacy_key":{
                                "description": "SNMP Privacy Variable Number.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "privacy_type":{
                                "description": "SNMP User Privacy Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "aes-128",
                                    "des",
                                    "none"
                                ],
                                "default": "none",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "authorization_key": "",
                                "authorization_type": "",
                                "site_group": "",
                                "username": ""
                            },
                            "snmp_key":{
                                "description": "SNMP Authorization/Privacy Keys.",
                                "type": "string",
                                "minimum": 8,
                                "maximum": 130,
                                "pattern":"^[\\S+]{8,130}$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.Syslog":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "audit_logs":{
                                "description": "Audit Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "console_admin_state":{
                                "description": "Console Syslog Admin State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "console_severity":{
                                "description": "Console Severity.",
                                "type": "list_of_values",
                                "enum": [
                                    "alerts",
                                    "critical",
                                    "emergencies"
                                ],
                                "default": "critical",
                                "x-omitempty": true
                            },
                            "events":{
                                "description": "Audit Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "faults":{
                                "description": "Faults Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "format":{
                                "description": "Syslog Format.",
                                "type": "list_of_values",
                                "enum": [
                                    "aci",
                                    "nxos"
                                ],
                                "default": "aci",
                                "x-omitempty": true
                            },
                            "local_admin_state":{
                                "description": "Local Syslog Admin State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "local_severity":{
                                "description": "Local Severity.",
                                "type": "list_of_values",
                                "enum": [
                                    "alerts",
                                    "critical",
                                    "debugging",
                                    "emergencies",
                                    "errors",
                                    "information",
                                    "notifications",
                                    "warnings"
                                ],
                                "default": "information",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "admin_state": "",
                                "audit_logs": "",
                                "console_admin_state": "",
                                "console_severity": "",
                                "events": "",
                                "faults": "",
                                "format": "",
                                "local_admin_state": "",
                                "local_severity": "",
                                "session_logs": "",
                                "show_milliseconds_in_timestamp": "",
                                "show_time_zone_in_timestamp": "",
                                "site_group": ""
                            },
                            "session_logs":{
                                "description": "Session Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "show_milliseconds_in_timestamp":{
                                "description": "Flag to show milliseconds in timestamp.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "show_time_zone_in_timestamp":{
                                "description": "Flag to show timezone in timestamp.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.syslogRemoteDestinations":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "forwarding_facility":{
                                "description": "The Remote Syslog Server Facility.",
                                "type": "list_of_values",
                                "enum": [
                                    "local0",
                                    "local1",
                                    "local2",
                                    "local3",
                                    "local4",
                                    "local5",
                                    "local6",
                                    "local7"
                                ],
                                "default": "local7",
                                "x-omitempty": true
                            },
                            "host":{
                                "description": "Syslog Remote Destination host.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "port":{
                                "description": "Syslog Destination Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 514,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "admin_state": "",
                                "forwarding_facility": "",
                                "host": "",
                                "management_epg": "",
                                "management_epg_type": "",
                                "port": "",
                                "severity": "",
                                "site_group": "",
                                "transport": ""
                            },
                            "severity":{
                                "description": "The Syslog Severity Level.",
                                "type": "list_of_values",
                                "enum": [
                                    "alerts",
                                    "critical",
                                    "debugging",
                                    "emergencies",
                                    "errors",
                                    "information",
                                    "notifications",
                                    "warnings"
                                ],
                                "default": "information",
                                "x-omitempty": true
                            },
                            "transport":{
                                "description": "Send Syslog using TCP or UDP.",
                                "type": "list_of_values",
                                "enum": [
                                    "tcp",
                                    "udp"
                                ],
                                "default": "udp",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "globalData":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "admin_state":{
                                "description": "Admin State Global Value.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "alias":{
                                "description": "Name alias field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 63,
                                "pattern":"^[a-zA-Z0-9_.-]+$",
                                "x-omitempty": true
                            },
                            "annotation":{
                                "description": "Annotation field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern":"^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "annotations":{
                                "description": "Annotations Key Value Pair.",
                                "type": "key_value",
                                "key_minimum": 1,
                                "key_maximum": 128,
                                "key_pattern":"^[^<>]+$",
                                "value_minimum": 1,
                                "value_maximum": 128,
                                "value_pattern":"^[^<>]+$",
                                "x-omitempty": true
                            },
                            "audit_logs":{
                                "description": "Audit Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "bridge_domain":{
                                "description": "Name of th Bridge Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "cdp_interface_policy":{
                                "description": "Name of the CDP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "description":{
                                "description": "Description field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern":"^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "events":{
                                "description": "Audit Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "faults":{
                                "description": "Faults Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "filter_name":{
                                "description": "Filter entry name field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "global_alias":{
                                "description": "Alias field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3out":{
                                "description": "L3Out name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "lldp_interface_policy":{
                                "description": "Name of the LLDP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "login_domain":{
                                "description": "Login Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern":"^([a-zA-Z0-9][a-zA-Z0-9\\_]+)$",
                                "x-omitempty": true
                            },
                            "management_epg":{
                                "description": "Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "management_epg_type":{
                                "description": "The Type of Management EPG.",
                                "type": "list_of_values",
                                "enum": [
                                    "inb",
                                    "oob"
                                ],
                                "default": "oob",
                                "x-omitempty": true
                            },
                            "monitoring_policy":{
                                "description": "Monitoring Policy Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "name":{
                                "description": "Name Field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_id":{
                                "description": "Node Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "physical_domain":{
                                "description": "physical domain name field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "pod_id":{
                                "description": "Pod Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 255,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "port_channel_policy":{
                                "description": "Name of the Port-Channel Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "qos_class":{
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "schema":{
                                "description": "Name of the Schema to Assign.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "session_logs":{
                                "description": "Session Log Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "site_name":{
                                "description": "Site name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "sites":{
                                "description": "List of Site names.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "software_version":{
                                "description": "Switch software version for Maintenance Group.",
                                "type": "string",
                                "minimum": 14,
                                "maximum": 17,
                                "pattern":"^(n9000\\-\\d{2}|^simsw-\\d{1})\\.\\d{1,2}\\(\\d{1,2}[a-z]\\)$",
                                "x-omitempty": true
                            },
                            "target_dscp":{
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "tenant":{
                                "description": "Tenant name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "username":{
                                "description": "SNMP username.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 31,
                                "pattern":"^[a-zA-Z][a-zA-Z0-9_.@-]{0,31}$",
                                "x-omitempty": true
                            },
                            "vmm_domain":{
                                "description": "VMM domain name field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vrf":{
                                "description": "VRF Name Field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "site.Groups":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args":{
                                "site_1": "",
                                "site_2": "",
                                "site_3": "",
                                "site_4": "",
                                "site_5": "",
                                "site_6": "",
                                "site_7": "",
                                "site_8": "",
                                "site_9": "",
                                "site_10": "",
                                "site_11": "",
                                "site_12": "",
                                "site_13": "",
                                "site_14": "",
                                "site_15": ""
                            },
                            "required_args":{
                                "site_1": "",
                                "site_2": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "site.Identifiers":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "auth_type":{
                                "description": "Type of Authentication to use for the Target System.",
                                "type": "list_of_values",
                                "enum": [
                                    "ssh-key",
                                    "username"
                                ],
                                "default": "username",
                                "x-omitempty": true
                            },
                            "configure_terraform_cloud":{
                                "description": "Flag to Enable or Disable Terraform Cloud.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "controller":{
                                "description": "Site Controller (APIC/NDO).",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "controller_type":{
                                "description": "Type of Controller for the Target Site.",
                                "type": "list_of_values",
                                "enum": [
                                    "apic",
                                    "ndo"
                                ],
                                "default": "apic",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "login_domain": "",
                                "username": ""
                            },
                            "required_args":{
                                "auth_type": "",
                                "configure_terraform_cloud": "",
                                "controller": "",
                                "controller_type": "",
                                "run_location": "",
                                "site_id": "",
                                "site_name": ""
                            },
                            "run_location":{
                                "description": "Will the Code be executed in Terraform Cloud or on the local Machine.",
                                "type": "list_of_values",
                                "enum": [
                                    "local",
                                    "tfc"
                                ],
                                "default": "tfc",
                                "x-omitempty": true
                            },
                            "site_id":{
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 15,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "site_name":{
                                "description": "Site Name Field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern":"^[a-zA-Z0-9_]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "system.apicConnectivityPreference":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "apic_connectivity_preference":{
                                "description": "APIC connectivity Preference.",
                                "type": "list_of_values",
                                "enum": [
                                    "ooband",
                                    "inband"
                                ],
                                "default": "inband",
                                "x-omitempty": true
                            },
                            "optional_args":{},
                            "required_args":{
                                "site_group": "",
                                "apic_connectivity_preference": ""
                            }
                        }
                    }
                ]
            },
            "system.bgpASN":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "autonomous_system_number":{
                                "description": "BGP ASN.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4294967295,
                                "default":6501,
                                "x-omitempty": true
                            },
                            "optional_args":{},
                            "required_args":{
                                "autonomous_system_number": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "system.bgpRouteReflector":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "node_list":{
                                "description": "BGP Route Reflector List.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "optional_args":{},
                            "required_args":{
                                "node_list": "",
                                "pod_id": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "system.globalAesEncryptionSettings":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "aes_passphrase":{
                                "minimum": 16,
                                "maximum": 32,
                                "pattern":"^[\\S+]{16,32}$"
                            },
                            "clear_passphrase":{
                                "description": "Flag to Remove the current encryption passphrase.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "enable_encryption":{
                                "description": "If Encryption should be Enabled or Not.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{},
                            "passphrase_key_derivation_version":{
                                "description": "Flag for Key Derivation Version.",
                                "type": "list_of_values",
                                "enum": [
                                    "v1"
                                ],
                                "default": "v1",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "clear_passphrase": "",
                                "enable_encryption": "",
                                "passphrase_key_derivation_version": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "tenants.apic.InbandMgmt":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "inband_ipv4":{
                                "description": "IPv4 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv4_gateway":{
                                "description": "IPv4 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv6":{
                                "description": "IPv6 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv6_gateway":{
                                "description": "IPv6 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "inband_ipv6": "",
                                "inband_ipv6_gateway": ""
                            },
                            "required_args":{
                                "inband_ipv4": "",
                                "inband_ipv4_gateway": "",
                                "node_id": "",
                                "pod_id": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "tenants.applicationProfiles":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args":{
                                "description": "",
                                "global_alias": "",
                                "alias": "",
                                "qos_class": "",
                                "schema": "",
                                "sites": "",
                                "template": ""
                            },
                            "preferred_group_member":{
                                "description": "Preferred Group Member.",
                                "type": "list_of_values",
                                "enum": [
                                    "exclude",
                                    "include"
                                ],
                                "default": "exclude",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpgPolicies":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "contract_exception_tag":{
                                "description": "The contract exception tag name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "custom_qos":{
                                "description": "Name of an Existing custom QoS Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policer":{
                                "description": "Name of an Existing Data Plane Policer Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_admin_state":{
                                "description": "EPG Admin State.",
                                "type": "list_of_values",
                                "enum": [
                                    "admin_up",
                                    "admin_shut"
                                ],
                                "default": "admin_up",
                                "x-omitempty": true
                            },
                            "epg_contract_master":{
                                "description": "The Name of an Existing EPG that will serve as contract master for this EPG, from which this EPG will inherit contracts (you must have previously created the contract master EPG.)",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_type":{
                                "description": "The Type of EPG to apply this to.",
                                "type": "list_of_values",
                                "enum": [
                                    "inb",
                                    "oob",
                                    "standard"
                                ],
                                "default": "standard",
                                "x-omitempty": true
                            },
                            "fhs_trust_control_policy":{
                                "description": "The Name of an Existing First Hop Security Trust Contol Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_domain_association":{
                                "description": "The Name of an Existing Fibre Channel Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "flood_in_encapsulation":{
                                "description": "Flood in Encapsulation.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "has_multicast_source":{
                                "description": "EPG with Multisite Multicast Source",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "intra_epg_isolation":{
                                "description": "Intra EPG Isolation.",
                                "type": "list_of_values",
                                "enum": [
                                    "enforced",
                                    "unenforced"
                                ],
                                "default": "unenforced",
                                "x-omitempty": true
                            },
                            "label_match_criteria":{
                                "description": "Label Match Criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "All",
                                    "AtleastOne",
                                    "AtmostOne",
                                    "None"
                                ],
                                "default": "AtleastOne",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "contract_exception_tag": "",
                                "custom_qos": "",
                                "data_plane_policer": "",
                                "epg_contract_master": "",
                                "fhs_trust_control_policy": "",
                                "fibre_channel_domain_association": ""
                            },
                            "preferred_group_member":{
                                "description": "Preferred Group Member.",
                                "type": "list_of_values",
                                "enum": [
                                    "exclude",
                                    "include"
                                ],
                                "default": "exclude",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "epg_type": "",
                                "flood_in_encapsulation": "",
                                "has_multicast_source": "",
                                "intra_epg_isolation": "",
                                "label_match_criteria": "",
                                "preferred_group_member": "",
                                "qos_class": "",
                                "useg_epg": ""
                            },
                            "useg_epg":{
                                "description": "Micro-Segmentation EPG.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpgVMMPolicies":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "allow_micro_segmentation":{
                                "description": "Allows microsegmentation for the base EPG.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "allow_promiscious_mode":{
                                "description": "Allows all packets to pass to the VMM domain, which is often used to monitor network activity.  * Accept — All traffic is received within the VMM domain.  * Reject — Packets that do not include the network address are dropped.  The default is Reject.",
                                "type": "list_of_values",
                                "enum": [
                                    "accept",
                                    "reject"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "delimiter":{
                                "description": "The delimiter symbol to use with the VMware portgroup name.  The acceptable symbols are |, ~, !, @, ^, +, =, and _..",
                                "type": "list_of_values",
                                "enum": [
                                    "|",
                                    "~",
                                    "!",
                                    "@",
                                    "^",
                                    "+",
                                    "=",
                                    "_"
                                ],
                                "default": "|",
                                "x-omitempty": true
                            },
                            "deploy_immediacy":{
                                "description": "Once policies are downloaded to the leaf software, deployment immediacy can specify when the policy is pushed into the hardware policy CAM. The options are:  * Immediate: Specifies that the policy is programmed in the hardware policy CAM when the policy is downloaded in the leaf software.  * On Demand: Specifies that the policy is programmed in the hardware policy CAM only when the first packet is received through the data path. This process helps to optimize the hardware space.  The default is On Demand.",
                                "type": "list_of_values",
                                "enum": [
                                    "immediate",
                                    "on-demand"
                                ],
                                "default": "on-demand",
                                "x-omitempty": true
                            },
                            "enhanced_lag_policy":{
                                "description": "Name of an Existing enhanced LAG Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "forged_transmits":{
                                "description": "Specifies whether to allow forged transmits. A forged transmit occurs when a network adapter starts sending out traffic that identifies itself as something else. This security policy compares the effective address of the virtual network adapter and the source address inside of an 802.3 Ethernet frame generated by the virtual machine to ensure that they match.  * Reject—All non-matching frames are dropped.  * Accept—Non-matching frames are received.  The default is Reject.",
                                "type": "list_of_values",
                                "enum": [
                                    "accept",
                                    "reject"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "mac_changes":{
                                "description": "Allows definition of new MAC addresses for the network adapter within the virtual machine (VM).  * Reject—Does not allow new MAC addresses.  * Accept—Allows new MAC addresses.  The default is Reject.",
                                "type": "list_of_values",
                                "enum": [
                                    "accept",
                                    "reject"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "netflow":{
                                "description": "Allows you to enable or disable NetFlow.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "number_of_ports":{
                                "description": "Maximum number of ports to create.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "delimiter": "",
                                "enhanced_lag_policy": ""
                            },
                            "port_allocation":{
                                "description": "Preferred Group Member.",
                                "type": "list_of_values",
                                "enum": [
                                    "elastic",
                                    "fixed",
                                    "none"
                                ],
                                "default": "none",
                                "x-omitempty": true
                            },
                            "port_binding":{
                                "description": "Enables you to choose a port-binding method:  * dynamic_binding - Dynamic Binding  * ephemeral - Ephemeral  * none - Default  * staticBinding - Static.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic_binding",
                                    "ephemeral",
                                    "default",
                                    "static_binding"
                                ],
                                "default": "default",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "allow_micro_segmentation": "",
                                "allow_promiscious_mode": "",
                                "deploy_immediacy": "",
                                "forged_transmits": "",
                                "mac_changes": "",
                                "netflow": "",
                                "number_of_ports": "",
                                "policy_name": "",
                                "port_allocation": "",
                                "port_binding": "",
                                "resolution_immediacy": "",
                                "vlan_mode": ""
                            },
                            "resolution_immediacy":{
                                "description": "Specifies whether policies are resolved immediately or when needed. The options are:  * Immediate: Specifies that EPG policies (including contracts and filters) are downloaded to the associated leaf switch software upon hypervisor attachment to the VMware vSphere Distributed Switch (VDS). LLDP or OpFlex permissions are used to resolve the hypervisor to leaf node attachments.  * On Demand: Specifies that a policy (for example, VLAN, VXLAN bindings, contracts, or filters) is pushed to the leaf node only when a hypervisor is attached to VDS and a VM is placed in the port group (EPG).  * Pre-provision: Specifies that a policy (for example, VLAN, VXLAN binding, contracts, or filters) is downloaded to a leaf switch even before a hypervisor is attached to the VDS, thereby pre-provisioning the configuration on the switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "immediate",
                                    "on-demand",
                                    "pre-provision"
                                ],
                                "default": "on-demand",
                                "x-omitempty": true
                            },
                            "vlan_mode":{
                                "description": "Defines which Method to use to assign the VLAN.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "static"
                                ],
                                "default": "dynamic",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpgs":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "application_profile":{
                                "description": "The Name of an Existing Application Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bridge_domain":{
                                "description": "The Name of an Existing Bridge Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "custom_epg_name":{
                                "description": "Enables you to enter a custom name for an EPG when associating the EPG with a Virtual Machine Manager (VMM) domain. The feature is supported for VMware Virtual Distributed Switch (VDS) and Microsoft VM network.  If you enter a custom name for the EPG, the same name is applied to the VMware vCenter port group or the Microsoft VM network. However, if you do not enter a custom name, the EPG-VMM domain association creates a VMware vCenter port group with a name in the format tenant|app_profile|epg_name or a Microsoft VM network with a name in the format tenant|application|epg|domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 80,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_policy":{
                                "description": "The Name of a EPG Policy in the Spreadsheet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_to_aaeps":{
                                "description": "Name of the Attachable Entity Profile Policy to Assign this to this EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "alias": "",
                                "annotations": "",
                                "contract_exception_tag": "",
                                "custom_epg_name": "",
                                "custom_qos": "",
                                "data_plane_policer": "",
                                "description": "",
                                "epg_contract_master": "",
                                "epg_to_aaeps": "",
                                "fhs_trust_control_policy": "",
                                "fibre_channel_domain_association": "",
                                "global_alias": "",
                                "physical_domains": "",
                                "schema": "",
                                "sites": "",
                                "template": "",
                                "vlans": "",
                                "vmm_domains": "",
                                "vmm_policy": "",
                                "vmm_vlans": ""
                            },
                            "physical_domains":{
                                "description": "Name(s) of the Physical Domains to associate to this EPG.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "application_profile": "",
                                "bridge_domain": "",
                                "epg_policy": "",
                                "epg_type": "",
                                "flood_in_encapsulation": "",
                                "has_multicast_source": "",
                                "intra_epg_isolation": "",
                                "label_match_criteria": "",
                                "preferred_group_member": "",
                                "qos_class": "",
                                "name": "",
                                "site_group": "",
                                "tenant": "",
                                "useg_epg": ""
                            },
                            "vmm_domains":{
                                "description": "Name(s) of the VMM Domains to associate to this EPG.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vmm_policy":{
                                "description": "Name of the VMM Policy from the Spreadsheet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vmm_vlans":{
                                "description": "List of VLANs to assign tot he VMM Domain for Static Bindings.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.bd.General":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "advertise_host_routes":{
                                "description": "Enabling Host Based Routing on the bridge domain, individual host-routes (/32 prefixes) are advertised from the border leaf switches.  Border leaf switches along with the subnet advertise the individual endpoint (EP) prefixes. The route information is advertised only if the host is connected to the local POD. If the EP is moved away from the local POD or once the EP is removed from EP database, the route advertise is then withdrawn.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "arp_flooding":{
                                "description": "Enables ARP flooding, so that the Layer 2 broadcast domain maps IP addresses to the MAC addresses. If flooding is disabled, unicast routing will be performed on the target IP address.  If the BD extends outside of ACI, always set to true.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "endpoint_retention_policy":{
                                "description": "Name of the Endpoint Retention Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "igmp_interface_policy":{
                                "description": "Name of the IGMP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "igmp_snooping_policy":{
                                "description": "Name of the IGMP Snooping Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ipv6_l3_unknown_multicast":{
                                "description": "The node forwarding parameter for Layer 3 unknown Multicast destinations.",
                                "type": "list_of_values",
                                "enum": [
                                    "flood",
                                    "opt-flood"
                                ],
                                "default": "flood",
                                "x-omitempty": true
                            },
                            "l2_unknown_unicast":{
                                "description": "By default, unicast traffic is flooded to all Layer 2 ports. If enabled, unicast traffic flooding is blocked at a specific port, only permitting egress traffic with MAC addresses that are known to exist on the port. When the BD has L2 Unknown Unicast set to Flood, if an endpoint is deleted the system deletes it from both the local leaf switches as well as the remote leaf switches where the BD is deployed, by selecting Clear Remote MAC Entries. Without this feature, the remote leaf continues to have this endpoint learned until the timer expires.  CAUTION:  Modifying the L2 Unknown Unicast setting causes traffic to bounce (go down and up) on interfaces to devices attached to EPGs associated with this bridge domain.",
                                "type": "list_of_values",
                                "enum": [
                                    "flood",
                                    "proxy"
                                ],
                                "default": "proxy",
                                "x-omitempty": true
                            },
                            "l3_unknown_multicast_flooding":{
                                "description": "The node forwarding parameter for Layer 3 unknown Multicast destinations. The value can be:  * flood — Send the data to the front panel ports if a router port exists on any bridge domain or send the data to the fabric if the data is in transit.  * opt-flood — Send the data only to router ports in the fabric.",
                                "type": "list_of_values",
                                "enum": [
                                    "flood",
                                    "opt-flood"
                                ],
                                "default": "flood",
                                "x-omitempty": true
                            },
                            "limit_ip_learn_to_subnets":{
                                "description": "Limits IP address learning to the bridge domain subnets only. Every bridge domain can have multiple subnets associated with it. By default, all IP addresses are learned.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "mld_snoop_policy":{
                                "description": "Name of the MLD Snooping Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "multi_destionation_flooding":{
                                "description": "The multiple destination forwarding method for L2 Multicast, Broadcast, and Link Layer traffic types. The method can be:  bd-flood — Sends the data to all ports on the same bridge domain, drop — Drops Packet. Never sends the data to any other ports., encap-flood — Sends the data to the ports on the same VLAN within the bridge domain regardless of the EPG, with the exception that data for the following protocols is flooded to the entire bridge domain: ARP/GARP, BGP, EIGRP, IGMP, IS-IS, OSPF/OSPFv6, ND, and PIM",
                                "type": "list_of_values",
                                "enum": [
                                    "bd-flood",
                                    "drop",
                                    "encap-flood"
                                ],
                                "default": "bd-flood",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "endpoint_retention_policy": "",
                                "igmp_interface_policy": "",
                                "igmp_snooping_policy": "",
                                "mld_snoop_policy": ""
                            },
                            "pim":{
                                "description": "Enables the Protocol Independent Multicast (PIM) protocol.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "pimv6":{
                                "description": "Enables the Protocol Independent Multicast (PIM) IPv6 protocol.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "policy_name":{
                                "description": "Name for this Shared Bridge Domain - General Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "advertise_host_routes": "",
                                "arp_flooding": "",
                                "ipv6_l3_unknown_multicast": "",
                                "l2_unknown_unicast": "",
                                "l3_unknown_multicast_flooding": "",
                                "limit_ip_learn_to_subnets": "",
                                "multi_destionation_flooding": "",
                                "pim": "",
                                "pimv6": "",
                                "policy_name": "",
                                "type": ""
                            },
                            "type":{
                                "description": "Specifies whether this bridge domain supports Fibre Channel Over Ethernet (FCoE) communication traffic or regular Ethernet communication traffic. The options are:  * fc — Supports FCoE communication over the ACI fabric.  * regular — Supports normal Ethernet communications over the ACI fabric.  * Note:  The FCoE protocol is typically used to support communication between SAN storage devices running on a Fibre Channel (FC) network and host applications running on a non-FC network.",
                                "type": "list_of_values",
                                "enum": [
                                    "fc",
                                    "regular"
                                ],
                                "default": "regular",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.bd.L3Configurations":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "disable_ip_data_plane_learning_for_pbr":{
                                "description": "Change this setting to true, only if the bridge domain is to be associated with policy-based redirect (PBR) enabled endpoint groups.  Note: Use caution when changing the default setting for this field. Setting this option to no can cause suboptimal traffic forwarding for non-PBR scenarios.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "ep_move_detection_mode":{
                                "description": "When the GARP based detection option is enabled, Cisco ACI will trigger an endpoint move based on GARP packets if the move occurs on the same interface and same EPG.  Note: This can only be used when ARP Flooding is enabled.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "first_hop_security_policy":{
                                "description": "Assign a First Hop Security BD Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "intersite_bum_traffic_allow":{
                                "description": "When extending the bridge domain between sites this option is to permit broadcast unknown multicast (BUM) traffic between the sites.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "intersite_l2_stretch":{
                                "description": "Extend the Bridge Domain between ACI Fabrics.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optimize_wan_bandwidth":{
                                "description": "Optimize WAN Bandwidth when stretching a BD over Multi-Site",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "first_hop_security_policy": "",
                                "nd_policy": "",
                                "netflow_monitor_policies": "",
                                "rogue_coop_exception_list": "",
                                "route_profile": ""
                            },
                            "nd_policy":{
                                "description": "Assign a Neighbor discovery (ND) Interface policy, that supports IPv6 services for the bridge domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_monitor_policies":{
                                "description": "A NetFlow Monitor Policies identifies packet flows for ingress IP packets and provides statistics based on these packet flows.  This should be configured as a list of strings with each string having a colon to seperate the policy name and the filter type.  There are three IP Filter types: * ce * ipv4 * ipv6. So to do a list of these you would do: 'default:ce,default:ipv4,my_policy:ipv6'",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "policy_name":{
                                "description": "Name for this Shared Bridge Domain - General Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "disable_ip_data_plane_learning_for_pbr": "",
                                "ep_move_detection_mode": "",
                                "intersite_bum_traffic_allow": "",
                                "intersite_l2_stretch": "",
                                "optimize_wan_bandwidth": "",
                                "policy_name": "",
                                "unicast_routing": ""
                            },
                            "rogue_coop_exception_list":{
                                "description": "A list of MAC addresses for which you want to have a higher tolerance for endpoint movement with rogue endpoint control before the endpoints get marked as rogue. Endpoints in the rogue/COOP exception list get marked as rogue only if they move 3000 or more times within 10 minutes. After an endpoint is marked as rogue, the endpoint is kept static so that learning is prevented and the traffic to and from the endpoint is dropped. The rogue endpoint is deleted after 30 seconds.",
                                "type": "list_of_macs",
                                "x-omitempty": true
                            },
                            "route_profile":{
                                "description": "Name of the Route Maps for Route Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "unicast_routing":{
                                "description": "enable or disable unicast routing on the Bridge Domain. We recommend disabling, false,  if you have not configured a subnet on the BD.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.bd.Subnets":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "advertise_externally":{
                                "description": "The subnet can be exported to a routed connection.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "gateway_ip":{
                                "description": "IPv4 or IPv6 Subnet to Assign to the Bridge Domain.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ip_data_plane_learning":{
                                "description": "Choose whether to enable or disable IP address learning for this subnet.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "no_default_svi_gateway":{
                                "description": "When using Cisco ACI Multi-Site with this APIC fabric domain (site), indicates that the VRF, EPG, or BD using this subnet are mirrored from another site, which has a relationship to this site through a contract. Do not modify or delete the mirrored objects.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "neighbor_discovery":{
                                "description": "Enables Neighbor Discovery on the subnet.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "true",
                                "x-omitempty": true
                            },
                            "nd_ra_prefix_policy":{
                                "description": "Assign a Neighbor discovery (ND) Prefix policy, that supports IPv6 services for the Subnet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "make_this_ip_address_primary":{
                                "description": "Indicates if the subnet is the primary IP address for the bridge domain (preferred over the available alternatives). ",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "description": "",
                                "nd_ra_prefix_policy": "",
                                "policy_tags": "",
                                "route_profile": ""
                            },
                            "policy_tags":{
                                "description": "Policy Tags Key Value Pair.",
                                "type": "key_value",
                                "key_minimum": 1,
                                "key_maximum": 128,
                                "key_pattern":"^[^<>]+$",
                                "value_minimum": 1,
                                "value_maximum": 128,
                                "value_pattern":"^[^<>]+$",
                                "x-omitempty": true
                            },
                            "querier_ip":{
                                "description": "Enables IGMP Snooping on the subnet.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "advertise_externally": "",
                                "bridge_domain": "",
                                "gateway_ip": "",
                                "ip_data_plane_learning": "",
                                "make_this_ip_address_primary": "",
                                "neighbor_discovery": "",
                                "no_default_svi_gateway": "",
                                "querier_ip": "",
                                "shared_between_vrfs": "",
                                "site_group": "",
                                "tenant": "",
                                "treat_as_virtual_ip_address": ""
                            },
                            "route_profile":{
                                "description": "Name of the Route Maps for Route Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "shared_between_vrfs":{
                                "description": "The subnet can be shared with and exported to multiple contexts (VRFs) in the same tenant or across tenants as part of a shared service. An example of a shared service is a routed connection to an EPG present in another context (VRF) in a different tenant. This enables traffic to pass in both directions across contexts (VRFs). An EPG that provides a shared service must have its subnet configured under that EPG (not under a bridge domain), and its scope must be set to advertised externally, and shared between VRFs.  Note: Shared subnets must be unique across the contexts (VRF) involved in the communication. When a subnet under an EPG provides a Layer 3 external network shared service, such a subnet must be globally unique within the entire ACI fabric.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "treat_as_virtual_ip_address":{
                                "description": "An IP address that doesn't correspond to an actual physical network interface, that is shared by multiple devices.  This is typically used for the Common Pervasive Gateway use case. For more information, see Common Pervasive Gateway in Cisco APIC Layer 3 Configuration Guide.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.bridgeDomains":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "custom_mac_address":{
                                "description": "The MAC address of the bridge domain (BD) or switched virtual interface (SVI). By default, a BD takes the fabric wide default MAC address of 00:22:BD:F8:19:FF. Configure this property to override the default address.",
                                "type": "mac_address",
                                "x-omitempty": true
                            },
                            "endpoint_clear":{
                                "description": "Set this to Clear the Endpoint Table on the Bridge Domain.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "flood_in_encapsulation":{
                                "description": "Flood in Encapsulation.",
                                "type": "list_of_values",
                                "enum": [
                                    "admin_up",
                                    "admin_shut"
                                ],
                                "default": "admin_up",
                                "x-omitempty": true
                            },
                            "intra_epg_isolation":{
                                "description": "Intra EPG Isolation.",
                                "type": "list_of_values",
                                "enum": [
                                    "enforced",
                                    "unenforced"
                                ],
                                "default": "unenforced",
                                "x-omitempty": true
                            },
                            "label_match_criteria":{
                                "description": "Label Match Criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "All",
                                    "AtleastOne",
                                    "AtmostOne",
                                    "None"
                                ],
                                "default": "AtleastOne",
                                "x-omitempty": true
                            },
                            "general_policy":{
                                "description": "Name of the General Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3out":{
                                "description": "Name of the L3Out.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3_policy":{
                                "description": "Name of the L3 Conifgurations Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_local_ipv6_address":{
                                "description": "Link Local IPv6 Address.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "alias": "",
                                "annotations": "",
                                "custom_mac_address": "",
                                "description": "",
                                "global_alias": "",
                                "l3_policy": "",
                                "l3out": "",
                                "link_local_ipv6_address": "",
                                "schema": "",
                                "sites": "",
                                "template": "",
                                "vrf": "",
                                "vrf_tenant": ""
                            },
                            "preferred_group_member":{
                                "description": "Preferred Group Member.",
                                "type": "list_of_values",
                                "enum": [
                                    "exclude",
                                    "include"
                                ],
                                "default": "exclude",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "endpoint_clear": "",
                                "general_policy": "",
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            },
                            "vrf_tenant":{
                                "description": "Name of the VRF Tenant.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.Filters":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "acknowledgement":{
                                "description": "TCP Session Rules - Option Acknowledgement.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "arp_flag":{
                                "description": "ARP Flag Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "req",
                                    "reply",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "established":{
                                "description": "TCP Session Rules - Option Established.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "ethertype":{
                                "description": "Ether Type Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "arp",
                                    "fcoe",
                                    "ip",
                                    "ipv4",
                                    "ipv6",
                                    "trill",
                                    "mac_security",
                                    "mpls_ucast",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "finish":{
                                "description": "TCP Session Rules - Option Finish.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "icmpv4_type":{
                                "description": "ICMPv4 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-unreach",
                                    "echo",
                                    "echo-rep",
                                    "src-quench",
                                    "time-exceeded",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "icmpv6_type":{
                                "description": "ICMPv6 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-unreach",
                                    "echo-req",
                                    "echo-rep",
                                    "nbr-solicit",
                                    "nbr-advert",
                                    "redirect", 
                                    "time-exceeded",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "ip_protocol":{
                                "description": "ICMPv6 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "egp",
                                    "eigrp",
                                    "igp",
                                    "icmp",
                                    "icmpv6",
                                    "igmp",
                                    "l2tp",
                                    "ospfigp",
                                    "pim",
                                    "tcp",
                                    "udp", 
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "match_dscp":{
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "match_only_fragments":{
                                "description": "Match Only Fragements Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args" : {
                                "alias": "",
                                "annotations": "",
                                "description": "",
                                "global_alias": "",
                                "name": "",
                                "schema": "",
                                "site_group": "",
                                "sites": "",
                                "template": "",
                                "tenant": ""
                            },
                            "reset":{
                                "description": "TCP Session Rules - Option Reset.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "stateful":{
                                "description": "Stateful Flag Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "synchronize":{
                                "description": "TCP Session Rules - Option Synchronize.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.filterEntry":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "acknowledgement":{
                                "description": "TCP Session Rules - Option Acknowledgement.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "arp_flag":{
                                "description": "ARP Flag Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "req",
                                    "reply",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "destination_port_from":{
                                "description": "The start of the destination port range. The start of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern":"^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "x-omitempty": true
                            },
                            "destination_port_to":{
                                "description": "The end of the destination port range. The end of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern":"^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "x-omitempty": true
                            },
                            "established":{
                                "description": "TCP Session Rules - Option Established.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "ethertype":{
                                "description": "Ether Type Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "arp",
                                    "fcoe",
                                    "ip",
                                    "ipv4",
                                    "ipv6",
                                    "trill",
                                    "mac_security",
                                    "mpls_ucast",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "finish":{
                                "description": "TCP Session Rules - Option Finish.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "icmpv4_type":{
                                "description": "ICMPv4 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-unreach",
                                    "echo",
                                    "echo-rep",
                                    "src-quench",
                                    "time-exceeded",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "icmpv6_type":{
                                "description": "ICMPv6 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-unreach",
                                    "echo-req",
                                    "echo-rep",
                                    "nbr-solicit",
                                    "nbr-advert",
                                    "redirect", 
                                    "time-exceeded",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "ip_protocol":{
                                "description": "ICMPv6 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "egp",
                                    "eigrp",
                                    "igp",
                                    "icmp",
                                    "icmpv6",
                                    "igmp",
                                    "l2tp",
                                    "ospfigp",
                                    "pim",
                                    "tcp",
                                    "udp", 
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "match_dscp":{
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "match_only_fragments":{
                                "description": "Match Only Fragements Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "alias": "",
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args" : {
                                "acknowledgement": "",
                                "arp_flag": "",
                                "destination_port_from": "",
                                "destination_port_to": "",
                                "established": "",
                                "ethertype": "",
                                "filter_name": "",
                                "finish": "",
                                "icmpv4_type": "",
                                "icmpv6_type": "",
                                "ip_protocol": "",
                                "name": "",
                                "match_dscp": "",
                                "match_only_Frags": "",
                                "reset": "",
                                "site_group": "",
                                "source_port_from": "",
                                "source_port_to": "",
                                "stateful": "",
                                "synchronize": "",
                                "tenant": ""
                            },
                            "reset":{
                                "description": "TCP Session Rules - Option Reset.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "source_port_from":{
                                "description": "The start of the source port range. The start of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern":"^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "x-omitempty": true
                            },
                            "source_port_to":{
                                "description": "The end of the source port range. The end of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern":"^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "x-omitempty": true
                            },
                            "stateful":{
                                "description": "Stateful Flag Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "synchronize":{
                                "description": "TCP Session Rules - Option Synchronize.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.ContractAssignments":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "application_epgs":{
                                "description": "List of EPGs to assign the Contract to.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "application_profile":{
                                "description": "Name of the Application Profile containing the EPGs.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "apply_both_directions":{
                                "description": "Flag to apply the contract in both directions.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "contract_name":{
                                "description": "Name of the Contract.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "apply_type":{
                                "description": "Based on the type of contract, how it should be applied.  A standard contract can be applied as a consumer, provider, interface or intra EPG apply type.  Taboo is just taboo.",
                                "type": "list_of_values",
                                "enum": [
                                    "consumed",
                                    "contract_interface",
                                    "intra_epg",
                                    "provided",
                                    "taboo"
                                ],
                                "default": "provided",
                                "x-omitempty": true
                            },
                            "external_epgs":{
                                "description": "List of External EPGs to assign the Contract to.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3out":{
                                "description": "Name of the L3Out containing the External EPGs.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "application_epgs": "",
                                "application_profile": "",
                                "external_epgs": "",
                                "l3out": "",
                                "schema": "",
                                "sites": "",
                                "target_tenant": "",
                                "template": "",
                                "vrfs": ""
                            },
                            "required_args":{
                                "apply_type": "",
                                "contract": "",
                                "site_group": "",
                                "target_type": "",
                                "tenant": ""
                            },
                            "target_tenant":{
                                "description": "Name of the Tenant to apply the contract to.  If left blank the source tenant name will be used.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "target_type":{
                                "description": "What is the target object for the Contract.",
                                "type": "list_of_values",
                                "enum": [
                                    "epg",
                                    "external_epg",
                                    "vrf"
                                ],
                                "default": "epg",
                                "x-omitempty": true
                            },
                            "vrfs":{
                                "description": "List of VRFs to assign the Contract to.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.ContractFilters":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "action":{
                                "description": "Action to be taken when traffic matches filter criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "deny",
                                    "permit"
                                ],
                                "default": "permit",
                                "x-omitempty": true
                            },
                            "apply_both_directions":{
                                "description": "Flag to apply the contract in both directions.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "contract_name":{
                                "description": "Name of the Contract.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "contract_type":{
                                "description": "Type of Contract.",
                                "type": "list_of_values",
                                "enum": [
                                    "OOB",
                                    "Standard",
                                    "Taboo"
                                ],
                                "default": "Standard",
                                "x-omitempty": true
                            },
                            "enable_policy_compression":{
                                "description": "Flag to enable contract data storage optimization.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "filters_to_assign":{
                                "description": "List of Filters to assign to the Contract.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "log":{
                                "description": "Enables contract permit and deny logging.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{
                            },
                            "required_args":{
                                "action": "",
                                "apply_both_directions": "",
                                "contract_name": "",
                                "contract_type": "",
                                "enable_policy_compression": "",
                                "filters_to_assign": "",
                                "log": "",
                                "site_group": "",
                                "target_dscp": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.contract.Contracts":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "contract_type":{
                                "description": "Type of Contract.",
                                "type": "list_of_values",
                                "enum": [
                                    "OOB",
                                    "Standard",
                                    "Taboo"
                                ],
                                "default": "Standard",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "alias": "",
                                "description": "",
                                "global_alias": "",
                                "schema": "",
                                "sites": "",
                                "template": ""
                            },
                            "required_args":{
                                "contract_type": "",
                                "name": "",
                                "qos_class": "",
                                "scope": "",
                                "site_group": "",
                                "target_dscp": "",
                                "tenant": ""
                            },
                            "scope":{
                                "description": "The scope of a service contract between two or more EPGs. The states are:  * context — This contract will be applied for endpoint groups associated with the same VRF.  * application-profile — This contract will be applied for endpoint groups in the same application profile.  * tenant — This contract will be applied for endpoint groups within the same tenant.  * global — This contract will be applied for endpoint groups throughout the fabric.  The default is context.",
                                "type": "list_of_values",
                                "enum": [
                                    "application-profile",
                                    "context",
                                    "global",
                                    "tenant"
                                ],
                                "default": "context",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3Out.nodeProfiles":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args":{
                                "description": "",
                                "global_alias": "",
                                "alias": "",
                                "schema": "",
                                "sites": "",
                                "template": ""
                            },
                            "required_args":{
                                "enable_policy_compression": "",
                                "name": "",
                                "qos_class": "",
                                "contract_type": "",
                                "scope": "",
                                "site_group": "",
                                "target_dscp": "",
                                "tenant": ""
                            },
                            "color_tag":{
                                "description": "Specifies the color of a policy label.",
                                "type": "list_of_values",
                                "enum": [
                                    "alice-blue",
                                    "antique-white",
                                    "aqua",
                                    "aquamarine",
                                    "azure",
                                    "beige",
                                    "bisque",
                                    "black",
                                    "blanched-almond",
                                    "blue",
                                    "blue-violet",
                                    "brown",
                                    "burlywood",
                                    "cadet-blue",
                                    "chartreuse",
                                    "chocolate",
                                    "coral",
                                    "cornflower-blue",
                                    "cornsilk",
                                    "crimson",
                                    "cyan",
                                    "dark-blue",
                                    "dark-cyan",
                                    "dark-goldenrod",
                                    "dark-gray",
                                    "dark-green",
                                    "dark-khaki",
                                    "dark-magenta",
                                    "dark-olive-green",
                                    "dark-orange",
                                    "dark-orchid",
                                    "dark-red",
                                    "dark-salmon",
                                    "dark-sea-green",
                                    "dark-slate-blue",
                                    "dark-slate-gray",
                                    "dark-turquoise",
                                    "dark-violet",
                                    "deep-pink",
                                    "deep-sky-blue",
                                    "dim-gray",
                                    "dodger-blue",
                                    "fire-brick",
                                    "floral-white",
                                    "forest-green",
                                    "fuchsia",
                                    "gainsboro",
                                    "ghost-white",
                                    "gold",
                                    "goldenrod",
                                    "gray",
                                    "green",
                                    "green-yellow",
                                    "honeydew",
                                    "hot-pink",
                                    "indian-red",
                                    "indigo",
                                    "ivory",
                                    "khaki",
                                    "lavender",
                                    "lavender-blush",
                                    "lawn-green",
                                    "lemon-chiffon",
                                    "light-blue",
                                    "light-coral",
                                    "light-cyan",
                                    "light-goldenrod-yellow",
                                    "light-gray",
                                    "light-green",
                                    "light-pink",
                                    "light-salmon",
                                    "light-sea-green",
                                    "light-sky-blue",
                                    "light-slate-gray",
                                    "light-steel-blue",
                                    "light-yellow",
                                    "lime",
                                    "lime-green",
                                    "linen",
                                    "magenta",
                                    "maroon",
                                    "medium-aquamarine",
                                    "medium-blue",
                                    "medium-orchid",
                                    "medium-purple",
                                    "medium-sea-green",
                                    "medium-slate-blue",
                                    "medium-spring-green",
                                    "medium-turquoise",
                                    "medium-violet-red",
                                    "midnight-blue",
                                    "mint-cream",
                                    "misty-rose",
                                    "moccasin",
                                    "navajo-white",
                                    "navy",
                                    "old-lace",
                                    "olive",
                                    "olive-drab",
                                    "orange",
                                    "orange-red",
                                    "orchid",
                                    "pale-goldenrod",
                                    "pale-green",
                                    "pale-turquoise",
                                    "pale-violet-red",
                                    "papaya-whip",
                                    "peachpuff",
                                    "peru",
                                    "pink",
                                    "plum",
                                    "powder-blue",
                                    "purple",
                                    "red",
                                    "rosy-brown",
                                    "royal-blue",
                                    "saddle-brown",
                                    "salmon",
                                    "sandy-brown",
                                    "sea-green",
                                    "seashell",
                                    "sienna",
                                    "silver",
                                    "sky-blue",
                                    "slate-blue",
                                    "slate-gray",
                                    "snow",
                                    "spring-green",
                                    "steel-blue",
                                    "tan",
                                    "teal",
                                    "thistle",
                                    "tomato",
                                    "turquoise",
                                    "violet",
                                    "wheat",
                                    "white",
                                    "white-smoke",
                                    "yellow",
                                    "yellow-green"
                                ],
                                "default": "yellow-green",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.policies.bgpPrefix":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "action":{
                                "description": "The action to be performed when the maximum prefix limit is reached.",
                                "type": "list_of_values",
                                "enum": [
                                    "log", 
                                    "restart", 
                                    "shut"
                                ],
                                "default": "log",
                                "x-omitempty": true
                            },
                            "maximum_number_of_prefixes":{
                                "description": "Maximum number of prefixes allowed from the peer.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 300000,
                                "default": 20000,
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "description": ""
                            },
                            "required_args":{
                                "action": "",
                                "maximum_number_of_prefixes": "",
                                "restart_time": "",
                                "site_group": "",
                                "tenant": "",
                                "threshold": ""
                            },
                            "restart_time":{
                                "description": "The period of time in minutes before restarting the peer when the prefix limit is reached.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 65535,
                                "x-omitempty": true
                            },
                            "threshold":{
                                "description": "The threshold percentage of the maximum number of prefixes before a warning is issued. For example, if the maximum number of prefixes is 10 and the threshold is 70%, a warning is issued when the number of prefixes exceeds 7 (70%). The value is a percentage, from 1 to 100%.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": 75,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.policies.ospfInterface":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "advertise_subnet":{
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "bfd":{
                                "description": "Flag to enable BFD on the Interface for OSPF.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "cost_of_interface":{
                                "description": "The OSPF cost for the interface. The cost (also called metric) of an interface in OSPF is an indication of the overhead required to send packets across a certain interface. The cost of an interface is inversely proportional to the bandwidth of that interface. A higher bandwidth indicates a lower cost. There is more overhead (higher cost) and time delays involved in crossing a 56k serial line than crossing a 10M ethernet line. The formula used to calculate the cost is: cost= 10000 0000/bandwidth in bps For example, it will cost 10 EXP8/10 EXP7 = 10 to cross a 10M Ethernet line and will cost 10 EXP8/1544000 = 64 to cross a T1 line. By default, the cost of an interface is calculated based on the bandwidth; you can force the cost of an interface with the ip ospf cost value interface sub-configuration mode command. Allowed value range is 0-65535.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "dead_interval":{
                                "description": "The interval between hello packets from a neighbor before the router declares the neighbor as down. This value must be the same for all networking devices on a specific network. Specifying a smaller dead interval (seconds) will give faster detection of a neighbor being down and improve convergence, but might cause more routing instability.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 40,
                                "x-omitempty": true
                            },
                            "hello_interval":{
                                "description": "The interval between hello packets that OSPF sends on the interface. Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue. This value must be the same for all routers and access servers on a specific network.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 10,
                                "x-omitempty": true
                            },
                            "mtu_ignore":{
                                "description": "Flag to ignore the MTU for the Neighbor Establishment.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "network_type":{
                                "description": "The OSPF interface policy network type. OSPF supports point-to-point and broadcast.",
                                "type": "list_of_values",
                                "enum": [
                                    "bcast", 
                                    "p2p"
                                ],
                                "default": "bcast",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "description": ""
                            },
                            "passive_interface":{
                                "description": "Add the Interface to OSPF but not build neighbor relationships on the Interface.",
                                "type": "list_of_values",
                                "enum": [
                                    "false", 
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "priority":{
                                "description": "The OSPF interface priority used to determine the designated router (DR) on a specific network. The router with the highest OSPF priority on a segment will become the DR for that segment. The same process is repeated for the backup designated router (BDR). In the case of a tie, the router with the highest RID will win.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 255,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "required_args":{
                                "advertise_subnet": "",
                                "bfd": "",
                                "cost_of_interface": "",
                                "dead_interval": "",
                                "hello_interval": "",
                                "mtu_ignore": "",
                                "network_type": "",
                                "passive_interface": "",
                                "priority": "",
                                "retransmit_interval": "",
                                "site_group": "",
                                "tenant": "",
                                "transmit_delay": ""
                            },
                            "retransmit_interval":{
                                "description": "The interval between LSA retransmissions. The retransmit interval occurs while the router is waiting for an acknowledgement from the neighbor router that it received the LSA. If no acknowlegment is received at the end of the interval, then the LSA is resent",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "transmit_delay":{
                                "description": "The delay time needed to send an LSA update packet. OSPF increments the LSA age time by the transmit delay amount before transmitting the LSA update. You should take into account the transmission and propagation delays for the interface when you set this value.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 450,
                                "default": 1,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.Sites":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "aws_access_key_id":{
                                "description": "AWS Access Key Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "aws_account_id":{
                                "description": "AWS Account Id.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_access_type":{
                                "description": "Type of Azure Account Configuration.",
                                "type": "list_of_values",
                                "enum": [
                                    "credentials",
                                    "managed",
                                    "shared"
                                ],
                                "default": "managed",
                                "x-omitempty": true
                            },
                            "azure_active_directory_id":{
                                "description": "Azure Active Directory Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_application_id":{
                                "description": "Azure Application Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_shared_account_id":{
                                "description": "Azure Shared Account Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_subscription_id":{
                                "description": "Azure Subscriptin Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "is_aws_account_trusted":{
                                "description": "",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "aws_access_key_id": "",
                                "aws_account_id": "",
                                "azure_access_type": "",
                                "azure_active_directory_id": "",
                                "azure_application_id": "",
                                "azure_shared_account_id": "",
                                "azure_subscription_id": "",
                                "is_aws_account_trusted": ""
                            },
                            "required_args":{
                                "tenant": "",
                                "site": "",
                                "site_group": "",
                                "users": ""
                            },
                            "site":{
                                "description": "Name of the Site.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "users":{
                                "description": "Names of a Layer3 Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.Tenants":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args":{
                                "alias": "",
                                "annotations": "",
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args":{
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "tenants.vrfCommunity":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "community_variable":{
                                "description": "Communtiy Variable Check.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "description": ""
                            },
                            "required_args":{
                                "community_variable": "",
                                "site_group": "",
                                "tenant": "",
                                "vrf": ""
                            }
                        }
                    }
                ]
            },
            "tenants.vrfPolicy":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "bd_enforcement_status":{
                                "description": "Only allow endpoints to ping their bridge domain gateways.  Ping from hosts on different bridge domains cannot ping other gateways.",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "bgp_timers":{
                                "description": "Name of the BGP Timer Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bgp_context_per_address_family_timers":{
                                "description": "Group of BGP per Address Family Timers Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "eigrp_context_per_address_family_timers":{
                                "description": "Group of the EIGRP per Address Family Timers Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "endpoint_retention_policy":{
                                "description": "Name of the Endpoint Retention Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ip_data_plane_learning":{
                                "description": "Defines if IP addresses are learned through dataplane packets for the VRF.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "known_multicast_allow":{
                                "description": "",
                                "type": "list_of_values",
                                "enum": [
                                    "false",
                                    "true"
                                ],
                                "default": "false",
                                "x-omitempty": true
                            },
                            "monitoring_policy":{
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args":{
                                "bgp_timers": "",
                                "bgp_context_per_address_family_timers": "",
                                "eigrp_context_per_address_family_timers": "",
                                "endpoint_retention_policy": "",
                                "monitoring_policy": "",
                                "ospf_context_per_address_family": "",
                                "ospf_timers": "",
                                "transit_route_tag_policy": ""
                            },
                            "ospf_context_per_address_family":{
                                "description": "Group of the OSPF per Address Family Timers Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ospf_timers":{
                                "description": "Name of the OSPF Timer Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "policy_control_enforcement_direction":{
                                "description": "Defines the policy enforcement direction coming to or from a Layer 3 Outside connection (L3Out)",
                                "type": "list_of_values",
                                "enum": [
                                    "egress",
                                    "ingress"
                                ],
                                "default": "ingress",
                                "x-omitempty": true
                            },
                            "policy_control_enforcement_preference":{
                                "description": "The preferred security policy control. ",
                                "type": "list_of_values",
                                "enum": [
                                    "enforced",
                                    "unenforced"
                                ],
                                "default": "enforced",
                                "x-omitempty": true
                            },
                            "policy_name":{
                                "description": "Name of the VRF Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "bd_enforcement_status": "",
                                "ip_data_plane_learning": "",
                                "known_multicast_allow": "",
                                "policy_control_enforcement_direction": "",
                                "policy_control_enforcement_preference": "",
                                "policy_name": ""
                            },
                            "transit_route_tag_policy":{
                                "description": "Name of the Transit Route Tag Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.Vrfs":{
                "allOf":[
                    {},
                    {
                        "properties":{
                            "optional_args":{
                                "alias": "",
                                "annotations": "",
                                "description": "",
                                "global_alias": "",
                                "schema": "",
                                "sites": "",
                                "template": ""
                            },
                            "preferred_group":{
                                "description": "Enable the Preferred Group feature to allow preferred group members in the VRF to communicate with each other without requiring a contract between them.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args":{
                                "name": "",
                                "preferred_group": "",
                                "site_group": "",
                                "tenant": "",
                                "vrf_policy": ""
                            },
                            "vrf_policy":{
                                "description": "Name of the VRF Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern":"^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            }
        }
    }
}